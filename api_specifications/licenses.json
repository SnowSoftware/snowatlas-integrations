{
  "openapi": "3.0.0",
  "info": {
    "title": "SAM Licenses",
    "description": "API for interacting with licenses.",
    "version": "1.0.0",
    "contact": {
          "name": "Snow Software",
          "url": "https://www.snowsoftware.com"
        }
  },
  "servers": [
   {
      "url": "https://australiasoutheast.snowsoftware.io"
    },
    {
      "url": "https://eastus2.snowsoftware.io"
    },
    {
      "url": "https://westeurope.snowsoftware.io"
    }
  ],
  "paths": {
    "/api/sam/v1/licenses/{id}/upgrades": {
      "get": {
        "tags": [
          "Upgrades"
        ],
        "description": "Returns a collection of upgrades for a license.",
        "summary": "Get license upgrades",
        "operationId": "upgrades",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The license identifier.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "page_size",
            "description": "The maximum number of items in the response.",
            "in": "query",
            "schema": {
              "type": "integer",
              "default": 100,
              "maximum": 1000
            }
          },
          {
            "name": "page_number",
            "description": "The page number.",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int64",
              "default": 1
            }
          },
          {
            "name": "filter",
            "in": "query",
            "description": "For more information on the available operators and which data types those operators work on, see [Filter API call results](https://snowsoftwareglobal.github.io/snow-atlas-api/get-started-with-apis/api-conventions#filter-api-call-results).",
            "schema": {
              "type": "string",
              "example": "status -eq \"active\""
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK - Your request succeeded.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HateoasCollectionOfLicenseUpgrade"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request - Your request is invalid or improperly formed. Consequently, the API server could not understand your request.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error - Your request failed due to an internal error.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "BearerAuth": [
              "sam.license.r"
            ]
          }
        ]
      }
    },
    "/api/sam/v1/licenses/{id}/upgrades/{upgradedLicenseId}": {
      "get": {
        "tags": [
          "Upgrades"
        ],
        "description": "Returns details of a license upgrade.",
        "summary": "Get license upgrade details", 
        "operationId": "upgrades2",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "example" : "02f1bf0e-6340-4da3-9702-a06de2cd020b",
            "description": "The license identifier.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "upgradedLicenseId",
            "in": "path",
             "example" : "547b6e50-6802-4ca0-86a9-e7051a92dc21",
            "description": "The upgrade license identifier.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK - Your request succeeded.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/LicenseUpgrade"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request - Your request is invalid or improperly formed. Consequently, the API server could not understand your request.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Not Found - The operation you requested failed because a resource associated with your request could not be found.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error - Your request failed due to an internal error.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "BearerAuth": [
              "sam.license.r"
            ]
          }
        ]
      }
    },
    "/api/sam/v1/licenses/transfers/{applicationId}/computers": {
      "get": {
        "tags": [
          "Transfers"
        ],
        "description": "Returns a collection of computer license transfers for an application.",
        "summary": "Get application license transfers", 
        "operationId": "computers",
        "parameters": [
          {
            "name": "applicationId",
            "description": "The application identifier.",
            "in": "path",
            "example" : "547b6e50-6802-4ca0-86a9-e7051a92dc21",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "page_size",
            "description": "The maximum number of items in the response.",
            "in": "query",
            "schema": {
              "type": "integer",
              "default": 100,
              "maximum": 1000
            }
          },
          {
            "name": "page_number",
            "description": "The page number.",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int64",
              "default": 1
            }
          },
          {
            "name": "filter",
            "in": "query",
            "description": "For more information on the available operators and which data types those operators work on, see [Filter API call results](https://snowsoftwareglobal.github.io/snow-atlas-api/get-started-with-apis/api-conventions#filter-api-call-results).",
            "schema": {
              "type": "string",
              "example": "status -eq \"active\""
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK - Your request succeeded.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HateoasCollectionOfComputerTransferCollection"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request - Your request is invalid or improperly formed. Consequently, the API server could not understand your request.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error - Your request failed due to an internal error.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "BearerAuth": [
              "sam.license.r"
            ]
          }
        ]
      }
    },
    "/api/sam/v1/licenses/transfers/{applicationId}/computers/{computerId}": {
      "get": {
        "tags": [
          "Transfers"
        ],
        "description": "Returns a collection of license transfers for specific application on a computer.",
        "summary": "Get application license transfers for a computer ", 
        "operationId": "computers2",
        "parameters": [
          {
            "name": "applicationId",
            "description": "The application identifier.",
            "example" : "02f1bf0e-6340-4da3-9702-a06de2cd020b",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "computerId",
            "description": "The computer identifier.",
            "example" : "7ebeed4a-e8c3-47c0-aec2-c22bec653b4a",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "page_size",
            "description": "The maximum number of items in the response.",
            "in": "query",
            "schema": {
              "type": "integer",
              "default": 100,
              "maximum": 1000
            }
          },
          {
            "name": "page_number",
            "description": "The page number.",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int64",
              "default": 1
            }
          },
          {
            "name": "filter",
            "in": "query",
            "description": "For more information on the available operators and which data types those operators work on, see [Filter API call results](https://snowsoftwareglobal.github.io/snow-atlas-api/get-started-with-apis/api-conventions#filter-api-call-results).",
            "schema": {
              "type": "string",
              "example": "status -eq \"active\""
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK - Your request succeeded.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ComputerTransferDetailsCollection"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request - Your request is invalid or improperly formed. Consequently, the API server could not understand your request.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Not Found - The operation you requested failed because a resource associated with your request could not be found.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error - Your request failed due to an internal error.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "BearerAuth": [
              "sam.license.r"
            ]
          }
        ]
      }
    },
    "/api/sam/v1/licenses/transfers/{applicationId}/custom-values": {
      "get": {
        "tags": [
          "Transfers"
        ],
        "description": "Returns a collection of custom value license transfers.",
        "summary": "Get custom value license transfers", 
        "operationId": "custom-values",
        "parameters": [
          {
            "name": "applicationId",
            "description": "The application identifier.",
            "example" : "02f1bf0e-6340-4da3-9702-a06de2cd020b",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "page_size",
            "description": "The maximum number of items in the response.",
            "in": "query",
            "schema": {
              "type": "integer",
              "default": 100,
              "maximum": 1000
            }
          },
          {
            "name": "page_number",
            "description": "The page number.",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int64",
              "default": 1
            }
          },
          {
            "name": "filter",
            "in": "query",
            "description": "For more information on the available operators and which data types those operators work on, see [Filter API call results](https://snowsoftwareglobal.github.io/snow-atlas-api/get-started-with-apis/api-conventions#filter-api-call-results).",
            "schema": {
              "type": "string",
              "example": "status -eq \"active\""
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK - Your request succeeded.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HateoasCollectionOfCustomValueTransferCollection"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request - Your request is invalid or improperly formed. Consequently, the API server could not understand your request.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "BearerAuth": [
              "sam.license.r"
            ]
          }
        ]
      }
    },
    "/api/sam/v1/licenses/transfers/{applicationId}/custom-values/{customId}": {
      "get": {
        "tags": [
          "Transfers"
        ],        "description": "Returns a collection of license transfers for a given custom value.",
        "summary": "Get license upgrade details", 
        "operationId": "custom-values2",
        "parameters": [
          {
            "name": "applicationId",
            "description": "The application identifier.",
            "example" : "02f1bf0e-6340-4da3-9702-a06de2cd020b",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "customId",
            "description": "The custom value identifier.",
            "example" : "7ebeed4a-e8c3-47c0-aec2-c22bec653b4a",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "page_size",
            "description": "The maximum number of items in the response.",
            "in": "query",
            "schema": {
              "type": "integer",
              "default": 100,
              "maximum": 1000
            }
          },
          {
            "name": "page_number",
            "description": "The page number.",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int64",
              "default": 1
            }
          },
          {
            "name": "filter",
            "in": "query",
            "description": "For more information on the available operators and which data types those operators work on, see [Filter API call results](https://snowsoftwareglobal.github.io/snow-atlas-api/get-started-with-apis/api-conventions#filter-api-call-results).",
            "schema": {
              "type": "string",
              "example": "status -eq \"active\""
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK - Your request succeeded.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HateoasCollectionOfCustomValueTransferDetailsCollection"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request - Your request is invalid or improperly formed. Consequently, the API server could not understand your request.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "BearerAuth": [
              "sam.license.r"
            ]
          }
        ]
      }
    },
    "/api/sam/v1/licenses/transfers/{applicationId}": {
      "get": {
        "tags": [
          "Transfers"
        ],
        "description": "Returns a collection of license transfers for an application.",
        "summary": "Get application license transfers", 
        "operationId": "transfers",
        "parameters": [
          {
            "name": "applicationId",
            "description": "The application identifier.",
            "example" : "02f1bf0e-6340-4da3-9702-a06de2cd020b",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "page_size",
            "description": "The maximum number of items in the response.",
            "in": "query",
            "schema": {
              "type": "integer",
              "default": 100,
              "maximum": 1000
            }
          },
          {
            "name": "page_number",
            "description": "The page number.",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int64",
              "default": 1
            }
          },
          {
            "name": "filter",
            "in": "query",
            "description": "For more information on the available operators and which data types those operators work on, see [Filter API call results](https://snowsoftwareglobal.github.io/snow-atlas-api/get-started-with-apis/api-conventions#filter-api-call-results).",
            "schema": {
              "type": "string",
              "example": "status -eq \"active\""
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK - Your request succeeded.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HateoasCollectionOfLicenseTransferCollection"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request - Your request is invalid or improperly formed. Consequently, the API server could not understand your request.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error - Your request failed due to an internal error.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "BearerAuth": [
              "sam.license.r"
            ]
          }
        ]
      }
    },
    "/api/sam/v1/licenses/transfers/{applicationId}/users": {
      "get": {
        "tags": [
          "Transfers"
        ],
        "description": "Returns a collection of user license transfers.",
        "summary": "Get users license transfer details",
        "operationId": "users",
        "parameters": [
          {
            "name": "applicationId",
            "description": "The application identifier.",
          "example" : "02f1bf0e-6340-4da3-9702-a06de2cd020b",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "page_size",
            "description": "The maximum number of items in the response.",
            "in": "query",
            "schema": {
              "type": "integer",
              "default": 100,
              "maximum": 1000
            }
          },
          {
            "name": "page_number",
            "description": "The page number.",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int64",
              "default": 1
            }
          },
          {
            "name": "filter",
            "in": "query",
            "description": "For more information on the available operators and which data types those operators work on, see [Filter API call results](https://snowsoftwareglobal.github.io/snow-atlas-api/get-started-with-apis/api-conventions#filter-api-call-results).",
            "schema": {
              "type": "string",
              "example": "status -eq \"active\""
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK - Your request succeeded.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HateoasCollectionOfUserTransferCollection"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request - Your request is invalid or improperly formed. Consequently, the API server could not understand your request.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error - Your request failed due to an internal error.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "BearerAuth": [
              "sam.license.r"
            ]
          }
        ]
      }
    },
    "/api/sam/v1/licenses/transfers/{applicationId}/users/{userId}": {
      "get": {
        "tags": [
          "Transfers"
        ],"description": "Returns a collection of license transfers for a given user.",
        "summary": "Get user license transfer details", 
        "operationId": "users2",
        "parameters": [
          {
            "name": "applicationId",
            "description": "The application identifier.",
            "example" : "02f1bf0e-6340-4da3-9702-a06de2cd020b",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "userId",
            "description": "The user identifier.",
          "example" : "351d6259-831e-4478-8ad4-8a11500c5731",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "page_size",
            "description": "The maximum number of items in the response.",
            "in": "query",
            "schema": {
              "type": "integer",
              "default": 100,
              "maximum": 1000
            }
          },
          {
            "name": "page_number",
            "description": "The page number.",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int64",
              "default": 1
            }
          },
          {
            "name": "filter",
            "in": "query",
            "description": "For more information on the available operators and which data types those operators work on, see [Filter API call results](https://snowsoftwareglobal.github.io/snow-atlas-api/get-started-with-apis/api-conventions#filter-api-call-results).",
            "schema": {
              "type": "string",
              "example": "status -eq \"active\""
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK - Your request succeeded.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HateoasCollectionOfUserTransferDetailsCollection"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request - Your request is invalid or improperly formed. Consequently, the API server could not understand your request.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error - Your request failed due to an internal error.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "BearerAuth": [
              "sam.license.r"
            ]
          }
        ]
      }
    },
    "/api/sam/v1/licenses/tracking/{applicationId}/computers": {
      "get": {
        "tags": [
          "Tracking"
        ],        "description": "Returns a collection of computer license tracking.",
        "summary": "Get computer license tracking for a given application", 
        "operationId": "computers3",
        "parameters": [
          {
            "name": "applicationId",
            "description": "The application identifier.",
            "example" : "02f1bf0e-6340-4da3-9702-a06de2cd020b",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "page_size",
            "description": "The maximum number of items in the response.",
            "in": "query",
            "schema": {
              "type": "integer",
              "default": 100,
              "maximum": 1000
            }
          },
          {
            "name": "page_number",
            "description": "The page number.",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int64",
              "default": 1
            }
          },
          {
            "name": "filter",
            "in": "query",
            "description": "For more information on the available operators and which data types those operators work on, see [Filter API call results](https://snowsoftwareglobal.github.io/snow-atlas-api/get-started-with-apis/api-conventions#filter-api-call-results).",
            "schema": {
              "type": "string",
              "example": "status -eq \"active\""
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK - Your request succeeded.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HateoasCollectionOfComputerTrackingCollection"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request - Your request is invalid or improperly formed. Consequently, the API server could not understand your request.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error - Your request failed due to an internal error.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "BearerAuth": [
              "sam.license.r"
            ]
          }
        ]
      }
    },
    "/api/sam/v1/licenses/tracking/{applicationId}/computers/{computerId}": {
      "get": {
        "tags": [
          "Tracking"
        ], 
        "description": "Returns a collection of application license tracking for a given computer.",
        "summary": "Get application license tracking for a computer", 
        "operationId": "computers4",
        "parameters": [
          {
            "name": "applicationId",
            "description": "The application identifier.",
            "example" : "02f1bf0e-6340-4da3-9702-a06de2cd020b",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "computerId",
            "description": "The computer identifier.",
            "example" : "7ebeed4a-e8c3-47c0-aec2-c22bec653b4a",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "page_size",
            "description": "The maximum number of items in the response.",
            "in": "query",
            "schema": {
              "type": "integer",
              "default": 100,
              "maximum": 1000
            }
          },
          {
            "name": "page_number",
            "description": "The page number.",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int64",
              "default": 1
            }
          },
          {
            "name": "filter",
            "in": "query",
            "description": "For more information on the available operators and which data types those operators work on, see [Filter API call results](https://snowsoftwareglobal.github.io/snow-atlas-api/get-started-with-apis/api-conventions#filter-api-call-results).",
            "schema": {
              "type": "string",
              "example": "status -eq \"active\""
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK - Your request succeeded.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HateoasCollectionOfComputerTrackingDetailsCollection"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request - Your request is invalid or improperly formed. Consequently, the API server could not understand your request.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error - Your request failed due to an internal error.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "BearerAuth": [
              "sam.license.r"
            ]
          }
        ]
      }
    },
    "/api/sam/v1/licenses/tracking/{applicationId}": {
      "get": {
        "tags": [
          "Tracking"
        ], 
        "description": "Returns a collection of license tracking for an application.",
        "summary": "Get application license tracking details", 
        "operationId": "tracking",
        "parameters": [
          {
            "name": "applicationId",
            "description": "The application identifier.",
            "example" : "02f1bf0e-6340-4da3-9702-a06de2cd020b",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "page_size",
            "description": "The maximum number of items in the response.",
            "in": "query",
            "schema": {
              "type": "integer",
              "default": 100,
              "maximum": 1000
            }
          },
          {
            "name": "page_number",
            "description": "The page number.",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int64",
              "default": 1
            }
          },
          {
            "name": "filter",
            "in": "query",
            "description": "For more information on the available operators and which data types those operators work on, see [Filter API call results](https://snowsoftwareglobal.github.io/snow-atlas-api/get-started-with-apis/api-conventions#filter-api-call-results).",
            "schema": {
              "type": "string",
              "example": "status -eq \"active\""
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK - Your request succeeded.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HateoasCollectionOfLicenseTracking"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request - Your request is invalid or improperly formed. Consequently, the API server could not understand your request.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error - Your request failed due to an internal error.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "BearerAuth": [
              "sam.license.r"
            ]
          }
        ]
      }
    },
    "/api/sam/v1/licenses/tracking/{applicationId}/users": {
      "get": {
        "tags": [
          "Tracking"
        ], 
        "description": "Returns a collection of users license tracking.",
        "summary": "Get users license tracking details", 
        "operationId": "users3",
        "parameters": [
          {
            "name": "applicationId",
            "description": "The application identifier.",
            "example" : "02f1bf0e-6340-4da3-9702-a06de2cd020b",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "page_size",
            "description": "The maximum number of items in the response.",
            "in": "query",
            "schema": {
              "type": "integer",
              "default": 100,
              "maximum": 1000
            }
          },
          {
            "name": "page_number",
            "description": "The page number.",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int64",
              "default": 1
            }
          },
          {
            "name": "filter",
            "in": "query",
            "description": "For more information on the available operators and which data types those operators work on, see [Filter API call results](https://snowsoftwareglobal.github.io/snow-atlas-api/get-started-with-apis/api-conventions#filter-api-call-results).",
            "schema": {
              "type": "string",
              "example": "status -eq \"active\""
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK - Your request succeeded.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HateoasCollectionOfUserTrackingCollection"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request - Your request is invalid or improperly formed. Consequently, the API server could not understand your request.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error - Your request failed due to an internal error.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "BearerAuth": [
              "sam.license.r"
            ]
          }
        ]
      }
    },
    "/api/sam/v1/licenses/tracking/{applicationId}/users/{userId}": {
      "get": {
        "tags": [
          "Tracking"
        ], 
        "description": "Returns a collection of license tracking for a given user.",
        "summary": "Get application license tracking for a user", 
        "operationId": "users4",
        "parameters": [
          {
            "name": "applicationId",
            "description": "The application identifier.",
            "example" : "02f1bf0e-6340-4da3-9702-a06de2cd020b",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "userId",
            "description": "The user identifier.",
            "example" : "351d6259-831e-4478-8ad4-8a11500c5731",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "page_size",
            "description": "The maximum number of items in the response.",
            "in": "query",
            "schema": {
              "type": "integer",
              "default": 100,
              "maximum": 1000
            }
          },
          {
            "name": "page_number",
            "description": "The page number.",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int64",
              "default": 1
            }
          },
          {
            "name": "filter",
            "in": "query",
            "description": "For more information on the available operators and which data types those operators work on, see [Filter API call results](https://snowsoftwareglobal.github.io/snow-atlas-api/get-started-with-apis/api-conventions#filter-api-call-results).",
            "schema": {
              "type": "string",
              "example": "status -eq \"active\""
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK - Your request succeeded.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HateoasCollectionOfUserTrackingDetailsCollection"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request - Your request is invalid or improperly formed. Consequently, the API server could not understand your request.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error - Your request failed due to an internal error.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "BearerAuth": [
              "sam.license.r"
            ]
          }
        ]
      }
    },
    "/api/sam/v1/licenses-policies/{policyId}/fields": {
      "get": {
        "tags": [
          "Policies"
        ], 
        "description": "Returns a collection of license policy fields.",
        "summary": "Get license policy fields", 
        "operationId": "fields",
        "parameters": [
          {
            "name": "policyId",
            "description": "The policy identifier.",
            "example" : "38df6c48-b63f-4cb7-bb84-22ffb5dd23a9",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "page_size",
            "description": "The maximum number of items in the response.",
            "in": "query",
            "schema": {
              "type": "integer",
              "default": 100,
              "maximum": 1000
            }
          },
          {
            "name": "page_number",
            "description": "The page number.",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int64",
              "default": 1
            }
          },
          {
            "name": "filter",
            "in": "query",
            "description": "For more information on the available operators and which data types those operators work on, see [Filter API call results](https://snowsoftwareglobal.github.io/snow-atlas-api/get-started-with-apis/api-conventions#filter-api-call-results).",
            "schema": {
              "type": "string",
              "example": "status -eq \"active\""
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK - Your request succeeded.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HateoasCollectionOfLicensePolicyFieldCollection"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request - Your request is invalid or improperly formed. Consequently, the API server could not understand your request.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error - Your request failed due to an internal error.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "BearerAuth": [
              "sam.license.r"
            ]
          }
        ]
      }
    },
    "/api/sam/v1/licenses-policies/{policyId}/fields/{fieldId}": {
      "get": {
                "tags": [
          "Policies"
        ],
        "description": "Returns details of a license policy field.",
        "summary": "Get license policy field details", 
        "operationId": "fields2",
        "parameters": [
          {
            "name": "policyId",
            "description": "The policy identifier.",
            "example" : "38df6c48-b63f-4cb7-bb84-22ffb5dd23a9",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "fieldId",
            "description": "The field identifier.",
            "example" : "882ceb2d-1d5a-41e2-b25c-9cca9e694990",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK - Your request succeeded.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/LicensePolicyField"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request - Your request is invalid or improperly formed. Consequently, the API server could not understand your request.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Not Found - The operation you requested failed because a resource associated with your request could not be found.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error - Your request failed due to an internal error.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "BearerAuth": [
              "sam.license.r"
            ]
          }
        ]
      }
    },
    "/api/sam/v1/licenses-policies": {
      "get": {
        "tags": [
          "Policies"
        ],
        "description": "Returns a collection of license policies.",
        "summary": "Get license policies", 
        "operationId": "licenses-policies",
        "parameters": [
          {
            "name": "page_size",
            "description": "The maximum number of items in the response.",
            "in": "query",
            "schema": {
              "type": "integer",
              "default": 100,
              "maximum": 1000
            }
          },
          {
            "name": "page_number",
            "description": "The page number.",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int64",
              "default": 1
            }
          },
          {
            "name": "filter",
            "in": "query",
            "description": "For more information on the available operators and which data types those operators work on, see [Filter API call results](https://snowsoftwareglobal.github.io/snow-atlas-api/get-started-with-apis/api-conventions#filter-api-call-results).",
            "schema": {
              "type": "string",
              "example": "status -eq \"active\""
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK - Your request succeeded.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HateoasCollectionOfPolicy"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request - Your request is invalid or improperly formed. Consequently, the API server could not understand your request.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error - Your request failed due to an internal error.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "BearerAuth": [
              "sam.license.r"
            ]
          }
        ]
      }
    },
    "/api/sam/v1/licenses-policies/{policyId}": {
      "get": {
        "tags": [
          "Policies"
        ],
        "description": "Returns details of a license policy.",
        "summary": "Get license policy details", 
        "operationId": "licenses-policies2",
        "parameters": [
          {
            "name": "policyId",
            "description": "The policy identifier.",
            "example" : "38df6c48-b63f-4cb7-bb84-22ffb5dd23a9",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK - Your request succeeded.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Policy"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request - Your request is invalid or improperly formed. Consequently, the API server could not understand your request.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Not Found - The operation you requested failed because a resource associated with your request could not be found.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error - Your request failed due to an internal error.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "BearerAuth": [
              "sam.license.r"
            ]
          }
        ]
      }
    },
    "/api/sam/v1/licenses": {
      "get": {
        "tags": [
          "Licenses"
        ]
        ,"description": "Returns a collection of licenses.",
        "summary": "Get licenses", 
        "operationId": "licenses",
        "parameters": [
          {
            "name": "page_size",
            "description": "The maximum number of items in the response.",
            "in": "query",
            "schema": {
              "type": "integer",
              "default": 100,
              "maximum": 1000
            }
          },
          {
            "name": "page_number",
            "description": "The page number.",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int64",
              "default": 1
            }
          },
          {
            "name": "filter",
            "in": "query",
            "description": "For more information on the available operators and which data types those operators work on, see [Filter API call results](https://snowsoftwareglobal.github.io/snow-atlas-api/get-started-with-apis/api-conventions#filter-api-call-results).",
            "schema": {
              "type": "string",
              "example": "status -eq \"active\""
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK - Your request succeeded.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HateoasCollectionOfLicenseCollection"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request - Your request is invalid or improperly formed. Consequently, the API server could not understand your request.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error - Your request failed due to an internal error.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "BearerAuth": [
              "sam.license.r"
            ]
          }
        ]
      }
    },
    "/api/sam/v1/licenses/{id}": {
      "get": {
        "tags": [
          "Licenses"
        ],
        "description": "Returns details of a license.",
        "summary": "Get license details", 
        "operationId": "licenses2",
        "parameters": [
          {
            "name": "id",
            "description": "The license identifier",
            "example" : "547b6e50-6802-4ca0-86a9-e7051a92dc21",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK - Your request succeeded.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/License"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request - Your request is invalid or improperly formed. Consequently, the API server could not understand your request.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Not Found - The operation you requested failed because a resource associated with your request could not be found.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error - Your request failed due to an internal error.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "BearerAuth": [
              "sam.license.r"
            ]
          }
        ]
      }
    },
    "/api/sam/v1/licenses-entitlements": {
      "get": {
        "tags": [
          "Entitlements"
        ],
        "description": "Returns a collection of license entitlements.",
        "summary": "Get license entitlements",
        "operationId": "licenses-entitlements",
        "parameters": [
          {
            "name": "page_size",
            "description": "The maximum number of items in the response.",
            "in": "query",
            "schema": {
              "type": "integer",
              "default": 100,
              "maximum": 1000
            }
          },
          {
            "name": "page_number",
            "description": "The page number.",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int64",
              "default": 1
            }
          },
          {
            "name": "filter",
            "in": "query",
            "description": "For more information on the available operators and which data types those operators work on, see [Filter API call results](https://snowsoftwareglobal.github.io/snow-atlas-api/get-started-with-apis/api-conventions#filter-api-call-results).",
            "schema": {
              "type": "string",
              "example": "status -eq \"active\""
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK - Your request succeeded.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HateoasCollectionOfLicenseEntitlement"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request - Your request is invalid or improperly formed. Consequently, the API server could not understand your request.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "BearerAuth": [
              "sam.license.r"
            ]
          }
        ]
      }
    },
    "/api/sam/v1/licenses/entitlements/computers": {
      "get": {
        "tags": [
          "Entitlements"
        ],
        "description": "Returns a collection of computers and applications entitlements.",
        "summary": "Get computers applications entitlements", 
        "operationId": "computers5",
        "parameters": [
          {
            "name": "page_size",
            "description": "The maximum number of items in the response.",
            "in": "query",
            "schema": {
              "type": "integer",
              "default": 100,
              "maximum": 1000
            }
          },
          {
            "name": "page_number",
            "description": "The page number.",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int64",
              "default": 1
            }
          },
          {
            "name": "filter",
            "in": "query",
            "description": "For more information on the available operators and which data types those operators work on, see [Filter API call results](https://snowsoftwareglobal.github.io/snow-atlas-api/get-started-with-apis/api-conventions#filter-api-call-results).",
            "schema": {
              "type": "string",
              "example": "status -eq \"active\""
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK - Your request succeeded.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HateoasCollectionOfComputerApplicationEntitlement"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request - Your request is invalid or improperly formed. Consequently, the API server could not understand your request.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "BearerAuth": [
              "sam.license.r"
            ]
          }
        ]
      }
    },
    "/api/sam/v1/licenses/entitlements/entitlement-states": {
      "get": {
        "tags": [
        "Entitlements"
        ],
        "description": "Returns a collection of entitlements states.",
        "summary": "Get license entitlement states", 
        "operationId": "entitlement-states",
        "parameters": [
          {
            "name": "page_size",
            "description": "The maximum number of items in the response.",
            "in": "query",
            "schema": {
              "type": "integer",
              "default": 100,
              "maximum": 1000
            }
          },
          {
            "name": "page_number",
            "description": "The page number.",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int64",
              "default": 1
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK - Your request succeeded.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EntitlementState"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request - Your request is invalid or improperly formed. Consequently, the API server could not understand your request.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "BearerAuth": [
              "sam.license.r"
            ]
          }
        ]
      }
    },
    "/api/sam/v1/licenses-extended-coverage-types": {
      "get": {
        "tags": [
          "Coverage"
        ],
                "description": "Returns a collection of extended coverage types.",
        "summary": "Get license extended coverage types", 
        "operationId": "licenses-extended-coverage-types",
        "parameters": [
          {
            "name": "page_size",
            "description": "The maximum number of items in the response.",
            "in": "query",
            "schema": {
              "type": "integer",
              "default": 100,
              "maximum": 1000
            }
          },
          {
            "name": "page_number",
            "description": "The page number.",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int64",
              "default": 1
            }
          },
          {
            "name": "filter",
            "in": "query",
            "description": "For more information on the available operators and which data types those operators work on, see [Filter API call results](https://snowsoftwareglobal.github.io/snow-atlas-api/get-started-with-apis/api-conventions#filter-api-call-results).",
            "schema": {
              "type": "string",
              "example": "status -eq \"active\""
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK - Your request succeeded.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HateoasCollectionOfExtendedCoverageType"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request - Your request is invalid or improperly formed. Consequently, the API server could not understand your request.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error - Your request failed due to an internal error.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "BearerAuth": [
              "sam.license.r"
            ]
          }
        ]
      }
    },
    "/api/sam/v1/extended-coverage": {
      "get": {
        "tags": [
          "Coverage"
        ],
        "description": "Returns a collection of extended coverages.",
        "summary": "Get extended coverages", 
        "operationId": "extended-coverage",
        "parameters": [
          {
            "name": "page_size",
            "description": "The maximum number of items in the response.",
            "in": "query",
            "schema": {
              "type": "integer",
              "default": 100,
              "maximum": 1000
            }
          },
          {
            "name": "page_number",
            "description": "The page number.",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int64",
              "default": 1
            }
          },
          {
            "name": "filter",
            "in": "query",
            "description": "For more information on the available operators and which data types those operators work on, see [Filter API call results](https://snowsoftwareglobal.github.io/snow-atlas-api/get-started-with-apis/api-conventions#filter-api-call-results).",
            "schema": {
              "type": "string",
              "example": "status -eq \"active\""
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK - Your request succeeded.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HateoasCollectionOfLicenseExtendedCoverage"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request - Your request is invalid or improperly formed. Consequently, the API server could not understand your request.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error - Your request failed due to an internal error.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "BearerAuth": [
              "sam.license.r"
            ]
          }
        ]
      }
    },
    "/api/sam/v1/extended-coverage/{coverageId}": {
      "get": {
        "tags": [
          "Coverage"
        ],
        "description": "Returns the details of an extended coverage.",
        "summary": "Get extended coverage details", 
        "operationId": "extended-coverage2",
        "parameters": [
          {
            "name": "coverageId",
            "description": "The coverage identifier.",
            "example" : "ac8469d5-a95a-419f-b03c-c36a87eafee6",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK - Your request succeeded.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/LicenseExtendedCoverage"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request - Your request is invalid or improperly formed. Consequently, the API server could not understand your request.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Not Found - The operation you requested failed because a resource associated with your request could not be found.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error - Your request failed due to an internal error.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "BearerAuth": [
              "sam.license.r"
            ]
          }
        ]
      }
    },
    "/api/sam/v1/licenses/{id}/costs": {
      "get": {
        "tags": [
          "Costs"
        ],
        "description": "Returns a collection of license costs.",
        "summary": "Get license upgrade details", 
        "operationId": "costs",
        "parameters": [
          {
            "name": "id",
            "description": "The license identifier.",
            "example" : "547b6e50-6802-4ca0-86a9-e7051a92dc21",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "page_size",
            "description": "The maximum number of items in the response.",
            "in": "query",
            "schema": {
              "type": "integer",
              "default": 100,
              "maximum": 1000
            }
          },
          {
            "name": "page_number",
            "description": "The page number.",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int64",
              "default": 1
            }
          },
          {
            "name": "filter",
            "in": "query",
            "description": "For more information on the available operators and which data types those operators work on, see [Filter API call results](https://snowsoftwareglobal.github.io/snow-atlas-api/get-started-with-apis/api-conventions#filter-api-call-results).",
            "schema": {
              "type": "string",
              "example": "status -eq \"active\""
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK - Your request succeeded.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HateoasCollectionOfLicenseCost"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request - Your request is invalid or improperly formed. Consequently, the API server could not understand your request.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error - Your request failed due to an internal error.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "BearerAuth": [
              "sam.license.r"
            ]
          }
        ]
      }
    },
    "/api/sam/v1/licenses/{id}/costs/{organizationId}": {
      "get": {
        "tags": [
          "Costs"
        ],
        "description": "Returns details of a license costs for an organization.",
        "summary": "Get a license costs for an organization", 
        "operationId": "costs2",
        "parameters": [
          {
            "name": "id",
            "description": "The license identifier.",
            "example" : "547b6e50-6802-4ca0-86a9-e7051a92dc21",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "organizationId",
            "description": "The organization identifier.",
            "example" : "9aed6bd6-6a13-482f-a13a-45e6c1982a8b",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK - Your request succeeded.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/LicenseCost"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request - Your request is invalid or improperly formed. Consequently, the API server could not understand your request.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Not Found - The operation you requested failed because a resource associated with your request could not be found.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error - Your request failed due to an internal error.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "BearerAuth": [
              "sam.license.r"
            ]
          }
        ]
      }
    },
    "/api/sam/v1/licenses/{id}/costs-summary": {
      "get": {
        "tags": [
          "Costs"
        ],
        "description": "Returns a summary of license costs.",
        "summary": "Get a license costs summary", 
        "operationId": "costs-summary",
        "parameters": [
          {
            "name": "id",
            "description": "The license identifier.",
            "example" : "547b6e50-6802-4ca0-86a9-e7051a92dc21",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK - Your request succeeded.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/LicenseCostSummary"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request - Your request is invalid or improperly formed. Consequently, the API server could not understand your request.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Not Found - The operation you requested failed because a resource associated with your request could not be found.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error - Your request failed due to an internal error.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "BearerAuth": [
              "sam.license.r"
            ]
          }
        ]
      }
    },
    "/api/sam/v1/licenses/{id}/assignments/computers": {
      "get": {
        "tags": [
          "Assignments"
        ],
        "description": "Returns a collection of computer assignments for a license.",
        "summary": "Get computer assignments for a license",
        "operationId": "computers6",
        "parameters": [
          {
            "name": "id",
            "description": "The license identifier.",
            "example" : "547b6e50-6802-4ca0-86a9-e7051a92dc21",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "page_size",
            "description": "The maximum number of items in the response.",
            "in": "query",
            "schema": {
              "type": "integer",
              "default": 100,
              "maximum": 1000
            }
          },
          {
            "name": "page_number",
            "description": "The page number.",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int64",
              "default": 1
            }
          },
          {
            "name": "filter",
            "in": "query",
            "description": "For more information on the available operators and which data types those operators work on, see [Filter API call results](https://snowsoftwareglobal.github.io/snow-atlas-api/get-started-with-apis/api-conventions#filter-api-call-results).",
            "schema": {
              "type": "string",
              "example": "status -eq \"active\""
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK - Your request succeeded.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HateoasCollectionOfComputerAssignment"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request - Your request is invalid or improperly formed. Consequently, the API server could not understand your request.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error - Your request failed due to an internal error.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "BearerAuth": [
              "sam.license.r"
            ]
          }
        ]
      }
    },
    "/api/sam/v1/licenses/{id}/assignments/computers/{assignmentId}": {
      "get": {
        "tags": [
          "Assignments"
        ],
        "description": "Returns license details of a computer assignment.",
        "summary": "Get assignement details for a computers license", 
        "operationId": "computers7",
        "parameters": [
          {
            "name": "id",
            "description": "The license identifier.",
            "example" : "547b6e50-6802-4ca0-86a9-e7051a92dc21",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "assignmentId",
            "description": "The assignement identifier.",
            "example" : "53c15e5c-6311-430d-9e8e-a2680b3efcde",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK - Your request succeeded.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ComputerAssignment"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request - Your request is invalid or improperly formed. Consequently, the API server could not understand your request.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Not Found - The operation you requested failed because a resource associated with your request could not be found.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error - Your request failed due to an internal error.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "BearerAuth": [
              "sam.license.r"
            ]
          }
        ]
      }
    },
    "/api/sam/v1/licenses/{id}/assignments/datacenters": {
      "get": {
        "tags": [
          "Assignments"
        ],
        "description": "Returns a collection of data center assignments.",
        "summary": "Get datacenter license assignments",
        "operationId": "datacenters",
        "parameters": [
          {
            "name": "id",
            "description": "The license identifier.",
            "example" : "547b6e50-6802-4ca0-86a9-e7051a92dc21",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "page_size",
            "description": "The maximum number of items in the response.",
            "in": "query",
            "schema": {
              "type": "integer",
              "default": 100,
              "maximum": 1000
            }
          },
          {
            "name": "page_number",
            "description": "The page number.",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int64",
              "default": 1
            }
          },
          {
            "name": "filter",
            "in": "query",
            "description": "For more information on the available operators and which data types those operators work on, see [Filter API call results](https://snowsoftwareglobal.github.io/snow-atlas-api/get-started-with-apis/api-conventions#filter-api-call-results).",
            "schema": {
              "type": "string",
              "example": "status -eq \"active\""
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK - Your request succeeded.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HateoasCollectionOfDatacenterAssignment"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request - Your request is invalid or improperly formed. Consequently, the API server could not understand your request.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error - Your request failed due to an internal error.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "BearerAuth": [
              "sam.license.r"
            ]
          }
        ]
      }
    },
    "/api/sam/v1/licenses/{id}/assignments/datacenters/{assignmentId}": {
      "get": {
        "tags": [
          "Assignments"
        ],
        "description": "Returns details of a data center assignment.",
        "summary": "Get datacenter assignment details for a license", 
        "operationId": "datacenters2",
        "parameters": [
          {
            "name": "id",
            "description": "The license identifier.",
            "example" : "547b6e50-6802-4ca0-86a9-e7051a92dc21",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "assignmentId",
            "description": "The assignement identifier.",
            "example" : "53c15e5c-6311-430d-9e8e-a2680b3efcde",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "page_size",
            "description": "The maximum number of items in the response.",
            "in": "query",
            "schema": {
              "type": "integer",
              "default": 100,
              "maximum": 1000
            }
          },
          {
            "name": "page_number",
            "description": "The page number.",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int64",
              "default": 1
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK - Your request succeeded.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DatacenterAssignment"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request - Your request is invalid or improperly formed. Consequently, the API server could not understand your request.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error - Your request failed due to an internal error.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Not Found - The operation you requested failed because a resource associated with your request could not be found.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "BearerAuth": [
              "sam.license.r"
            ]
          }
        ]
      }
    },
    "/api/sam/v1/licenses/{id}/assignments-summary": {
      "get": {
        "tags": [
          "Assignments"
        ],
        "description": "Returns details of a license assignment.",
        "summary": "Get license assignments summary", 
        "operationId": "assignments-summary",
        "parameters": [
          {
            "name": "id",
            "description": "The license identifier.",
            "example" : "547b6e50-6802-4ca0-86a9-e7051a92dc21",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK - Your request succeeded.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/LicenseAssignmentDetails"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request - Your request is invalid or improperly formed. Consequently, the API server could not understand your request.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Not Found - The operation you requested failed because a resource associated with your request could not be found.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error - Your request failed due to an internal error.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "BearerAuth": [
              "sam.license.r"
            ]
          }
        ]
      }
    },
    "/api/sam/v1/licenses/{id}/assignments/organizations": {
      "get": {
        "tags": [
          "Assignments"
        ],
        "description": "Returns a collection of organization assignments.",
        "summary": "Get organization assignments for a license", 
        "operationId": "organizations",
        "parameters": [
          {
            "name": "id",
            "description": "The license identifier.",
            "example" : "547b6e50-6802-4ca0-86a9-e7051a92dc21",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "page_size",
            "description": "The maximum number of items in the response.",
            "in": "query",
            "schema": {
              "type": "integer",
              "default": 100,
              "maximum": 1000
            }
          },
          {
            "name": "page_number",
            "description": "The page number.",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int64",
              "default": 1
            }
          },
          {
            "name": "filter",
            "in": "query",
            "description": "For more information on the available operators and which data types those operators work on, see [Filter API call results](https://snowsoftwareglobal.github.io/snow-atlas-api/get-started-with-apis/api-conventions#filter-api-call-results).",
            "schema": {
              "type": "string",
              "example": "status -eq \"active\""
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK - Your request succeeded.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HateoasCollectionOfOrganizationAssignment"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request - Your request is invalid or improperly formed. Consequently, the API server could not understand your request.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error - Your request failed due to an internal error.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "BearerAuth": [
              "sam.license.r"
            ]
          }
        ]
      }
    },
    "/api/sam/v1/licenses/{id}/assignments/organizations/{assignmentId}": {
      "get": {
        "tags": [
          "Assignments"
        ],
        "description": "Returns license details of an organization assignment.",
        "summary": "Get license details for an organization by assignement", 
        "operationId": "organizations2",
        "parameters": [
          {
            "name": "id",
            "description": "The license identifier.",
            "example" : "547b6e50-6802-4ca0-86a9-e7051a92dc21",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "assignmentId",
            "description": "The assignement identifier.",
            "example" : "53c15e5c-6311-430d-9e8e-a2680b3efcde",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK - Your request succeeded.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/OrganizationAssignment"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request - Your request is invalid or improperly formed. Consequently, the API server could not understand your request.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Not Found - The operation you requested failed because a resource associated with your request could not be found.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error - Your request failed due to an internal error.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "BearerAuth": [
              "sam.license.r"
            ]
          }
        ]
      }
    },
    "/api/sam/v1/licenses/{id}/assignments/site": {
      "get": {
        "tags": [
          "Assignments"
        ],
        "description": "Returns license details of a site assignment.",
        "summary": "Get site details for a license",
        "operationId": "site",
        "parameters": [
          {
            "name": "id",
            "description": "The license identifier.",
            "example" : "547b6e50-6802-4ca0-86a9-e7051a92dc21",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK - Your request succeeded.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SiteAssignment"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request - Your request is invalid or improperly formed. Consequently, the API server could not understand your request.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Not Found - The operation you requested failed because a resource associated with your request could not be found.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error - Your request failed due to an internal error.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "BearerAuth": [
              "sam.license.r"
            ]
          }
        ]
      }
    },
    "/api/sam/v1/licenses/{id}/assignments/users": {
      "get": {
        "tags": [
          "Assignments"
        ],
        "description": "Returns a collection of user assignments for a license.",
        "summary": "Get license user assignments", 
        "operationId": "users5",
        "parameters": [
          {
            "name": "id",
            "description": "The license identifier.",
            "example" : "547b6e50-6802-4ca0-86a9-e7051a92dc21",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "page_size",
            "description": "The maximum number of items in the response.",
            "in": "query",
            "schema": {
              "type": "integer",
              "default": 100,
              "maximum": 1000
            }
          },
          {
            "name": "page_number",
            "description": "The page number.",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int64",
              "default": 1
            }
          },
          {
            "name": "filter",
            "in": "query",
            "description": "For more information on the available operators and which data types those operators work on, see [Filter API call results](https://snowsoftwareglobal.github.io/snow-atlas-api/get-started-with-apis/api-conventions#filter-api-call-results).",
            "schema": {
              "type": "string",
              "example": "status -eq \"active\""
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK - Your request succeeded.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HateoasCollectionOfUserAssignment"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request - Your request is invalid or improperly formed. Consequently, the API server could not understand your request.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error - Your request failed due to an internal error.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "BearerAuth": [
              "sam.license.r"
            ]
          }
        ]
      }
    },
    "/api/sam/v1/licenses/{id}/assignments/users/{assignmentId}": {
      "get": {
        "tags": [
          "Assignments"
        ],
        "description": "Returns license details of a user assignment.",
        "summary": "Get license details by users assignment", 
        "operationId": "users6",
        "parameters": [
          {
            "name": "id",
            "description": "The license identifier.",
            "example" : "547b6e50-6802-4ca0-86a9-e7051a92dc21",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "assignmentId",
            "description": "The assignement identifier.",
            "example" : "53c15e5c-6311-430d-9e8e-a2680b3efcde",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK - Your request succeeded.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserAssignment"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request - Your request is invalid or improperly formed. Consequently, the API server could not understand your request.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Not Found - The operation you requested failed because a resource associated with your request could not be found.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error - Your request failed due to an internal error.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "BearerAuth": [
              "sam.license.r"
            ]
          }
        ]
      }
    }
  },
  "components": {
    "schemas": {
      "Pagination": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "page_size": {
            "type": "integer",
            "description": "The page size you requested.",
            "default": 100,
            "format": "int32",
            "example": 100
          },
          "page_number": {
            "type": "integer",
            "description": "The page number you requested.",
            "default": 1,
            "format": "int32",
            "example": 1
          },
          "total_pages": {
            "type": "integer",
            "description": "The total number of pages.",
            "format": "int32",
            "example": 751,
            "nullable": true
          }
        }
      },
      "Link": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "href": {
            "description": "The associated relative URL.",
            "type": "string",
            "example": "api/sam/v1/licenses/...",
            "nullable": true
          },
          "rel": {
            "description": "Specifies the relationship between the current document and the linked document/resource.",
            "type": "string",
            "example": "self",
            "nullable": true
          },
          "method": {
            "description": "The method to access related resources.",
            "type": "string",
            "example": "GET",
            "nullable": true
          }
        }
      },
      "HateoasResource": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "_links": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Link"
            }
          }
        }
      },
      "LicenseUpgrade": {
        "allOf": [
          {
            "$ref": "#/components/schemas/HateoasResource"
          },
          {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "licenseId": {
                "type": "string",
                "format": "guid"
              },
              "quantity": {
                "type": "integer",
                "format": "int32"
              },
              "upgradedLicenseId": {
                "type": "string",
                "format": "guid"
              },
              "upgradedQuantity": {
                "type": "integer",
                "format": "int32"
              }
            }
          }
        ]
      },
      "FilteredResponseOfLicenseUpgrade": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "items": {
            "type": "array",
            
            "items": {
              "$ref": "#/components/schemas/LicenseUpgrade"
            }
          },
          "pagination": {
            "description": "The pagination details.",
            "oneOf": [
              {
                "$ref": "#/components/schemas/Pagination"
              }
            ]
          }
        }
      },
      "HateoasCollectionOfLicenseUpgrade": {
        "allOf": [
          {
            "$ref": "#/components/schemas/FilteredResponseOfLicenseUpgrade"
          },
          {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "_links": {
                "description": "A collection of links to related resources.",
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/Link"
                }
              }
            }
          }
        ]
      },
      "ErrorContent": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "code": {
            "type": "integer",
            "description": "The HTTP status code.",
            "format": "int32"
          },
          "message": {
            "description": "The error message.",
            "type": "string"
          }
        }
      },
      "ErrorResponse": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "error": {
            "description": "The error details.",
            "oneOf": [
              {
                "$ref": "#/components/schemas/ErrorContent"
              }
            ]
          }
        }
      },
      "ComputerTransferCollection": {
        "allOf": [
          {
            "$ref": "#/components/schemas/HateoasResource"
          },
          {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "licenseId": {
                "type": "string",
                "format": "guid"
              },
              "organizationId": {
                "type": "string",
                "format": "guid"
              },
              "computerId": {
                "type": "string",
                "format": "guid"
              },
              "fromApplicationId": {
                "type": "string",
                "format": "guid"
              },
              "toApplicationId": {
                "type": "string",
                "format": "guid"
              }
            }
          }
        ]
      },
      "FilteredResponseOfComputerTransferCollection": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "items": {
            "type": "array",
            
            "items": {
              "$ref": "#/components/schemas/ComputerTransferCollection"
            }
          },
          "pagination": {
            "description": "The pagination details.",
            "oneOf": [
              {
                "$ref": "#/components/schemas/Pagination"
              }
            ]
          }
        }
      },
      "HateoasCollectionOfComputerTransferCollection": {
        "allOf": [
          {
            "$ref": "#/components/schemas/FilteredResponseOfComputerTransferCollection"
          },
          {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "_links": {
                "description": "A collection of links to related resources.",
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/Link"
                }
              }
            }
          }
        ]
      },
      "ComputerTransferDetailsCollection": {
        "allOf": [
          {
            "$ref": "#/components/schemas/HateoasResource"
          },
          {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "id": {
                "type": "string",
                "format": "guid"
              },
              "metricId": {
                "type": "string",
                "format": "guid"
              },
              "fromApplicationId": {
                "type": "string",
                "format": "guid"
              },
              "toApplicationId": {
                "type": "string",
                "format": "guid"
              },
              "computerId": {
                "type": "string",
                "format": "guid"
              },
              "licenseId": {
                "type": "string",
                "format": "guid"
              },
              "organizationId": {
                "type": "string",
                "format": "guid"
              },
              "isUpgrade": {
                "type": "boolean"
              },
              "isDowngrade": {
                "type": "boolean"
              },
              "isCrossEdition": {
                "type": "boolean"
              },
              "isCrossPlatform": {
                "type": "boolean"
              },
              "quantity": {
                "type": "integer",
                "format": "int32"
              }
            }
          }
        ]
      },
      "CustomValueTransferCollection": {
        "allOf": [
          {
            "$ref": "#/components/schemas/HateoasResource"
          },
          {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "customCompareValueId": {
                "type": "string",
                "format": "guid"
              },
              "licenseId": {
                "type": "string",
                "format": "guid"
              },
              "organizationId": {
                "type": "string",
                "format": "guid"
              },
              "fromApplicationId": {
                "type": "string",
                "format": "guid"
              },
              "toApplicationId": {
                "type": "string",
                "format": "guid"
              }
            }
          }
        ]
      },
      "FilteredResponseOfCustomValueTransferCollection": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "items": {
            "type": "array",
            
            "items": {
              "$ref": "#/components/schemas/CustomValueTransferCollection"
            }
          },
          "pagination": {
            "description": "The pagination details.",
            "oneOf": [
              {
                "$ref": "#/components/schemas/Pagination"
              }
            ]
          }
        }
      },
      "HateoasCollectionOfCustomValueTransferCollection": {
        "allOf": [
          {
            "$ref": "#/components/schemas/FilteredResponseOfCustomValueTransferCollection"
          },
          {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "_links": {
                "description": "A collection of links to related resources.",
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/Link"
                }
              }
            }
          }
        ]
      },
      "UseRightType": {
        "type": "integer",
        "description": "",
        "x-enumFlags": true,
        "x-enumNames": [
          "None",
          "Standard",
          "UpgradeRights",
          "DowngradeRights",
          "CrossEdition",
          "VirtualDesktopAccess",
          "VmSupport",
          "NinetyDayRule",
          "ProcessorLimitations",
          "ProcessorCoreLimitations",
          "NamedComputer",
          "NamedDatacenter",
          "NamedApplicationCluster",
          "NamedUser",
          "Site",
          "CrossPlatform"
        ],
        "enum": [
          0,
          1,
          2,
          4,
          8,
          16,
          32,
          256,
          512,
          1024,
          8192,
          16384,
          32768,
          65536,
          131072,
          262144
        ]
      },
      "CustomValueTransferDetailsCollection": {
        "allOf": [
          {
            "$ref": "#/components/schemas/HateoasResource"
          },
          {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "id": {
                "type": "string",
                "format": "guid"
              },
              "metricId": {
                "type": "string",
                "format": "guid"
              },
              "licenseId": {
                "type": "string",
                "format": "guid"
              },
              "organizationId": {
                "type": "string",
                "format": "guid"
              },
              "customCompareValueId": {
                "type": "string",
                "format": "guid"
              },
              "fromApplicationId": {
                "type": "string",
                "format": "guid"
              },
              "toApplicationId": {
                "type": "string",
                "format": "guid"
              },
              "isUpgrade": {
                "type": "boolean"
              },
              "isDowngrade": {
                "type": "boolean"
              },
              "isCrossEdition": {
                "type": "boolean"
              },
              "isCrossPlatform": {
                "type": "boolean"
              },
              "quantity": {
                "type": "integer",
                "format": "int32"
              },
              "useRights": {
                "$ref": "#/components/schemas/UseRightType"
              }
            }
          }
        ]
      },
      "FilteredResponseOfCustomValueTransferDetailsCollection": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "items": {
            "type": "array",
            
            "items": {
              "$ref": "#/components/schemas/CustomValueTransferDetailsCollection"
            }
          },
          "pagination": {
            "description": "The pagination details.",
            "oneOf": [
              {
                "$ref": "#/components/schemas/Pagination"
              }
            ]
          }
        }
      },
      "HateoasCollectionOfCustomValueTransferDetailsCollection": {
        "allOf": [
          {
            "$ref": "#/components/schemas/FilteredResponseOfCustomValueTransferDetailsCollection"
          },
          {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "_links": {
                "description": "A collection of links to related resources.",
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/Link"
                }
              }
            }
          }
        ]
      },
      "LicenseTransferCollection": {
        "allOf": [
          {
            "$ref": "#/components/schemas/HateoasResource"
          },
          {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "licenseId": {
                "type": "string",
                "format": "guid"
              },
              "hasComputerTransfer": {
                "type": "boolean"
              },
              "hasUserTransfer": {
                "type": "boolean"
              },
              "hasCustomCompareValueTransfer": {
                "type": "boolean"
              }
            }
          }
        ]
      },
      "FilteredResponseOfLicenseTransferCollection": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "items": {
            "type": "array",
            
            "items": {
              "$ref": "#/components/schemas/LicenseTransferCollection"
            }
          },
          "pagination": {
            "description": "The pagination details.",
            "oneOf": [
              {
                "$ref": "#/components/schemas/Pagination"
              }
            ]
          }
        }
      },
      "HateoasCollectionOfLicenseTransferCollection": {
        "allOf": [
          {
            "$ref": "#/components/schemas/FilteredResponseOfLicenseTransferCollection"
          },
          {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "_links": {
                "description": "A collection of links to related resources.",
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/Link"
                }
              }
            }
          }
        ]
      },
      "UserTransferCollection": {
        "allOf": [
          {
            "$ref": "#/components/schemas/HateoasResource"
          },
          {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "licenseId": {
                "type": "string",
                "format": "guid"
              },
              "organizationId": {
                "type": "string",
                "format": "guid"
              },
              "userId": {
                "type": "string",
                "format": "guid"
              },
              "fromApplicationId": {
                "type": "string",
                "format": "guid"
              },
              "toApplicationId": {
                "type": "string",
                "format": "guid"
              }
            }
          }
        ]
      },
      "FilteredResponseOfUserTransferCollection": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "items": {
            "type": "array",
            
            "items": {
              "$ref": "#/components/schemas/UserTransferCollection"
            }
          },
          "pagination": {
            "description": "The pagination details.",
            "oneOf": [
              {
                "$ref": "#/components/schemas/Pagination"
              }
            ]
          }
        }
      },
      "HateoasCollectionOfUserTransferCollection": {
        "allOf": [
          {
            "$ref": "#/components/schemas/FilteredResponseOfUserTransferCollection"
          },
          {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "_links": {
                "description": "A collection of links to related resources.",
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/Link"
                }
              }
            }
          }
        ]
      },
      "UserTransferDetailsCollection": {
        "allOf": [
          {
            "$ref": "#/components/schemas/HateoasResource"
          },
          {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "id": {
                "type": "string",
                "format": "guid"
              },
              "metricId": {
                "type": "string",
                "format": "guid"
              },
              "licenseId": {
                "type": "string",
                "format": "guid"
              },
              "organizationId": {
                "type": "string",
                "format": "guid"
              },
              "userId": {
                "type": "string",
                "format": "guid"
              },
              "fromApplicationId": {
                "type": "string",
                "format": "guid"
              },
              "toApplicationId": {
                "type": "string",
                "format": "guid"
              },
              "isUpgrade": {
                "type": "boolean"
              },
              "isDowngrade": {
                "type": "boolean"
              },
              "isCrossPlatform": {
                "type": "boolean"
              },
              "isCrossEdition": {
                "type": "boolean"
              },
              "quantity": {
                "type": "integer",
                "format": "int32"
              }
            }
          }
        ]
      },
      "FilteredResponseOfUserTransferDetailsCollection": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "items": {
            "type": "array",
            
            "items": {
              "$ref": "#/components/schemas/UserTransferDetailsCollection"
            }
          },
          "pagination": {
            "description": "The pagination details.",
            "oneOf": [
              {
                "$ref": "#/components/schemas/Pagination"
              }
            ]
          }
        }
      },
      "HateoasCollectionOfUserTransferDetailsCollection": {
        "allOf": [
          {
            "$ref": "#/components/schemas/FilteredResponseOfUserTransferDetailsCollection"
          },
          {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "_links": {
                "description": "A collection of links to related resources.",
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/Link"
                }
              }
            }
          }
        ]
      },
      "ComputerTrackingCollection": {
        "allOf": [
          {
            "$ref": "#/components/schemas/HateoasResource"
          },
          {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "applicationId": {
                "type": "string",
                "format": "guid"
              },
              "computerId": {
                "type": "string",
                "format": "guid"
              },
              "organizationId": {
                "type": "string",
                "format": "guid"
              },
              "licenseId": {
                "type": "string",
                "format": "guid"
              }
            }
          }
        ]
      },
      "FilteredResponseOfComputerTrackingCollection": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "items": {
            "type": "array",
            
            "items": {
              "$ref": "#/components/schemas/ComputerTrackingCollection"
            }
          },
          "pagination": {
            "description": "The pagination details.",
            "oneOf": [
              {
                "$ref": "#/components/schemas/Pagination"
              }
            ]
          }
        }
      },
      "HateoasCollectionOfComputerTrackingCollection": {
        "allOf": [
          {
            "$ref": "#/components/schemas/FilteredResponseOfComputerTrackingCollection"
          },
          {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "_links": {
                "description": "A collection of links to related resources.",
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/Link"
                }
              }
            }
          }
        ]
      },
      "ComputerTrackingDetailsCollection": {
        "allOf": [
          {
            "$ref": "#/components/schemas/HateoasResource"
          },
          {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "id": {
                "type": "string",
                "format": "guid"
              },
              "metricId": {
                "type": "string",
                "format": "guid"
              },
              "applicationId": {
                "type": "string",
                "format": "guid"
              },
              "computerId": {
                "type": "string",
                "format": "guid"
              },
              "licenseId": {
                "type": "string",
                "format": "guid"
              },
              "organizationId": {
                "type": "string",
                "format": "guid"
              },
              "coverageTrait": {
                "type": "integer",
                "format": "int32"
              },
              "initialRequirement": {
                "type": "integer",
                "format": "int32"
              },
              "receivedCoverage": {
                "type": "integer",
                "format": "int32"
              },
              "primaryUseRights": {
                "$ref": "#/components/schemas/UseRightType"
              },
              "fullUseRights": {
                "$ref": "#/components/schemas/UseRightType"
              }
            }
          }
        ]
      },
      "FilteredResponseOfComputerTrackingDetailsCollection": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "items": {
            "type": "array",
            
            "items": {
              "$ref": "#/components/schemas/ComputerTrackingDetailsCollection"
            }
          },
          "pagination": {
            "description": "The pagination details.",
            "oneOf": [
              {
                "$ref": "#/components/schemas/Pagination"
              }
            ]
          }
        }
      },
      "HateoasCollectionOfComputerTrackingDetailsCollection": {
        "allOf": [
          {
            "$ref": "#/components/schemas/FilteredResponseOfComputerTrackingDetailsCollection"
          },
          {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "_links": {
                "description": "A collection of links to related resources.",
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/Link"
                }
              }
            }
          }
        ]
      },
      "LicenseTracking": {
        "allOf": [
          {
            "$ref": "#/components/schemas/HateoasResource"
          },
          {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "licenseId": {
                "type": "string",
                "format": "guid"
              },
              "hasComputerTracking": {
                "type": "boolean"
              },
              "hasUserTracking": {
                "type": "boolean"
              }
            }
          }
        ]
      },
      "FilteredResponseOfLicenseTracking": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "items": {
            "type": "array",
            
            "items": {
              "$ref": "#/components/schemas/LicenseTracking"
            }
          },
          "pagination": {
            "description": "The pagination details.",
            "oneOf": [
              {
                "$ref": "#/components/schemas/Pagination"
              }
            ]
          }
        }
      },
      "HateoasCollectionOfLicenseTracking": {
        "allOf": [
          {
            "$ref": "#/components/schemas/FilteredResponseOfLicenseTracking"
          },
          {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "_links": {
                "description": "A collection of links to related resources.",
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/Link"
                }
              }
            }
          }
        ]
      },
      "UserTrackingCollection": {
        "allOf": [
          {
            "$ref": "#/components/schemas/HateoasResource"
          },
          {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "applicationId": {
                "type": "string",
                "format": "guid"
              },
              "userId": {
                "type": "string",
                "format": "guid"
              },
              "licenseId": {
                "type": "string",
                "format": "guid"
              },
              "organizationId": {
                "type": "string",
                "format": "guid"
              }
            }
          }
        ]
      },
      "FilteredResponseOfUserTrackingCollection": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "items": {
            "type": "array",
            
            "items": {
              "$ref": "#/components/schemas/UserTrackingCollection"
            }
          },
          "pagination": {
            "description": "The pagination details.",
            "oneOf": [
              {
                "$ref": "#/components/schemas/Pagination"
              }
            ]
          }
        }
      },
      "HateoasCollectionOfUserTrackingCollection": {
        "allOf": [
          {
            "$ref": "#/components/schemas/FilteredResponseOfUserTrackingCollection"
          },
          {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "_links": {
                "description": "A collection of links to related resources.",
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/Link"
                }
              }
            }
          }
        ]
      },
      "UserTrackingDetailsCollection": {
        "allOf": [
          {
            "$ref": "#/components/schemas/HateoasResource"
          },
          {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "id": {
                "type": "string",
                "format": "guid"
              },
              "metricId": {
                "type": "string",
                "format": "guid"
              },
              "applicationId": {
                "type": "string",
                "format": "guid"
              },
              "userId": {
                "type": "string",
                "format": "guid"
              },
              "licenseId": {
                "type": "string",
                "format": "guid"
              },
              "organizationId": {
                "type": "string",
                "format": "guid"
              },
              "coverageTrait": {
                "type": "integer",
                "format": "int32"
              },
              "initialRequirement": {
                "type": "integer",
                "format": "int32"
              },
              "receivedCoverage": {
                "type": "integer",
                "format": "int32"
              },
              "primaryUseRights": {
                "$ref": "#/components/schemas/UseRightType"
              },
              "fullUseRights": {
                "$ref": "#/components/schemas/UseRightType"
              }
            }
          }
        ]
      },
      "FilteredResponseOfUserTrackingDetailsCollection": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "items": {
            "type": "array",
            
            "items": {
              "$ref": "#/components/schemas/UserTrackingDetailsCollection"
            }
          },
          "pagination": {
            "description": "The pagination details.",
            "oneOf": [
              {
                "$ref": "#/components/schemas/Pagination"
              }
            ]
          }
        }
      },
      "HateoasCollectionOfUserTrackingDetailsCollection": {
        "allOf": [
          {
            "$ref": "#/components/schemas/FilteredResponseOfUserTrackingDetailsCollection"
          },
          {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "_links": {
                "description": "A collection of links to related resources.",
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/Link"
                }
              }
            }
          }
        ]
      },
      "LicensePolicyFieldCollection": {
        "allOf": [
          {
            "$ref": "#/components/schemas/HateoasResource"
          },
          {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "id": {
                "type": "string",
                "format": "guid"
              },
              "name": {
                "type": "string"
              },
              "description": {
                "type": "string"
              },
              "isRequired": {
                "type": "boolean"
              }
            }
          }
        ]
      },
      "FilteredResponseOfLicensePolicyFieldCollection": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "items": {
            "type": "array",
            
            "items": {
              "$ref": "#/components/schemas/LicensePolicyFieldCollection"
            }
          },
          "pagination": {
            "description": "The pagination details.",
            "oneOf": [
              {
                "$ref": "#/components/schemas/Pagination"
              }
            ]
          }
        }
      },
      "HateoasCollectionOfLicensePolicyFieldCollection": {
        "allOf": [
          {
            "$ref": "#/components/schemas/FilteredResponseOfLicensePolicyFieldCollection"
          },
          {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "_links": {
                "description": "A collection of links to related resources.",
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/Link"
                }
              }
            }
          }
        ]
      },
      "LicensePolicyField": {
        "allOf": [
          {
            "$ref": "#/components/schemas/HateoasResource"
          },
          {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "id": {
                "type": "string",
                "format": "guid"
              },
              "name": {
                "type": "string"
              },
              "description": {
                "type": "string"
              },
              "isRequired": {
                "type": "boolean",
                "nullable": true
              },
              "isComboBox": {
                "type": "boolean",
                "nullable": true
              },
              "isEditingAllowed": {
                "type": "boolean",
                "nullable": true
              },
              "listItems": {
                "type": "array",
                "items": {
                  "type": "string"
                }
              }
            }
          }
        ]
      },
      "Policy": {
        "allOf": [
          {
            "$ref": "#/components/schemas/HateoasResource"
          },
          {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "id": {
                "type": "string",
                "format": "guid"
              }
            }
          }
        ]
      },
      "FilteredResponseOfPolicy": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "items": {
            "type": "array",
            
            "items": {
              "$ref": "#/components/schemas/Policy"
            }
          },
          "pagination": {
            "description": "The pagination details.",
            "oneOf": [
              {
                "$ref": "#/components/schemas/Pagination"
              }
            ]
          }
        }
      },
      "HateoasCollectionOfPolicy": {
        "allOf": [
          {
            "$ref": "#/components/schemas/FilteredResponseOfPolicy"
          },
          {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "_links": {
                "description": "A collection of links to related resources.",
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/Link"
                }
              }
            }
          }
        ]
      },
      "LicenseCollection": {
        "allOf": [
          {
            "$ref": "#/components/schemas/HateoasResource"
          },
          {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "id": {
                "type": "string",
                "example" : "547b6e50-6802-4ca0-86a9-e7051a92dc21",
                "format": "guid"
              },
              "organizationId": {
                "type": "string",
                "example": "00000000-0000-0000-0000-000000000000",
                "format": "guid",
                "nullable": true
              },
              "applicationId": {
                "type": "string",
                 "example" : "02f1bf0e-6340-4da3-9702-a06de2cd020b",
                "format": "guid",
                "nullable": true
              },
              "contractId": {
                "type": "string",
                "example" : "882ceb2d-1d5a-41e2-b25c-9cca9e694990",
                "format": "guid",
                "nullable": true
              },
              "metricId": {
                "type": "string",
                "example" : "17a2241a-4f00-4827-bc02-ad14e578859e",
                "format": "guid"
              },
              "purchaseDate": {
                "type": "string",
                "example": "5/25/2023 12:00:00 AM",
                "format": "date-time"
              },
              "purchaseValue": {
                "type": "number",
                "example": "100",
                "format": "decimal"
              },
              "purchaseCurrency": {
                "type": "string",
                "example": "USD"

              },
              "quantity": {
                "type": "integer",
                "example": "1",
                "format": "int32"
              }
            }
          }
        ]
      },
      "FilteredResponseOfLicenseCollection": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "items": {
            "type": "array",
            
            "items": {
              "$ref": "#/components/schemas/LicenseCollection"
            }
          },
          "pagination": {
            "description": "The pagination details.",
            "oneOf": [
              {
                "$ref": "#/components/schemas/Pagination"
              }
            ]
          }
        }
      },
      "HateoasCollectionOfLicenseCollection": {
        "allOf": [
          {
            "$ref": "#/components/schemas/FilteredResponseOfLicenseCollection"
          },
          {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "_links": {
                "description": "A collection of links to related resources.",
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/Link"
                }
              }
            }
          }
        ]
      },
      "IncompleteLicenseReason": {
        "type": "integer",
        "description": "",
        "x-enumFlags": true,
        "x-enumNames": [
          "None",
          "MissingApplication",
          "MissingLicenseCount",
          "MissingMetric",
          "MissingBaseLicenses",
          "InvalidSubscriptionPeriod",
          "MissingValidFromToDate",
          "MissingAgreementNumber",
          "MissingAssignmentType",
          "All"
        ],
        "enum": [
          0,
          1,
          2,
          4,
          8,
          16,
          32,
          64,
          128,
          255
        ]
      },
      "License": {
        "allOf": [
          {
            "$ref": "#/components/schemas/HateoasResource"
          },
          {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "id": {
                "type": "string",
                "example" : "547b6e50-6802-4ca0-86a9-e7051a92dc21",
                "format": "guid"
              },
              "organizationId": {
                "type": "string",
                "example" : "00000000-0000-0000-0000-000000000000",
                "format": "guid"
              },
              "applicationId": {
                "type": "string",
                "example" : "02f1bf0e-6340-4da3-9702-a06de2cd020b",
                "format": "guid",
                "nullable": true
              },
              "metricId": {
                "type": "string",
                "example" : "17a2241a-4f00-4827-bc02-ad14e578859e",
                "format": "guid"
              },
              "purchaseDate": {
                "type": "string",
                "example": "5/25/2023 12:00:00 AM",
                "format": "date-time"
              },
              "purchaseValue": {
                "type": "number",
                "example": "100",
                "format": "decimal"
              },
              "purchaseCurrency": {
                "type": "string",
                "example": "USD"

              },
              "quantity": {
                "type": "integer",
                "example": "1",
                "format": "int32"
              },
              "licenseKeys": {
                "type": "string",
                "example": "15S45-7Y9L54-X8J7N"
              },
              "mediaStorage": {
                "type": "string",
                "example" : "Not Applicable"
              },
              "licenseProofLocation": {
                "type": "string",
                "example" : "Coupa"
              },
              "invoiceReference": {
                "type": "string",
                "example": "INV34907204"
              },
              "vendor": {
                "type": "string",
                "example": "CDW"
              },
              "notes": {
                "type": "string",
                "example": "Purchased for project Orion"
              },
              "externalId": {
                "type": "string"
              },
              "productDescription": {
                "type": "string",
                "example" : "Fusion Software"
              },
              "isSubscription": {
                "example": "False",
                "type": "boolean"
              },
              "isCrossPlatform": {
                "type": "boolean",
                "example": "False"
              },
              "isUpgrade": {
                "type": "boolean",
                "example": "False"
              },
              "isDowngrade": {
                "type": "boolean",
                "example": "False"
              },
              "incompleteReasons": {
                "$ref": "#/components/schemas/IncompleteLicenseReason"
              },
              "contractId": {
                "type": "string",
                "example" : "882ceb2d-1d5a-41e2-b25c-9cca9e694990",
                "format": "guid",
                "nullable": true
              }
            }
          }
        ]
      },
      "AssignmentType": {
        "type": "string",
        "description": "",
        "x-enumNames": [
          "Organization",
          "Computer",
          "User",
          "Site"
        ],
        "enum": [
          "Organization",
          "Computer",
          "User",
          "Site"
        ]
      },
      "LicenseEntitlement": {
        "allOf": [
          {
            "$ref": "#/components/schemas/HateoasResource"
          },
          {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "applicationId": {
                "type": "string",
                "format": "guid"
              },
              "organizationId": {
                "type": "string",
                "format": "guid"
              },
              "metricId": {
                "type": "string",
                "format": "guid"
              },
              "assignmentType": {
                "$ref": "#/components/schemas/AssignmentType"
              },
              "quantity": {
                "type": "integer",
                "format": "int32"
              }
            }
          }
        ]
      },
      "FilteredResponseOfLicenseEntitlement": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "items": {
            "type": "array",
            
            "items": {
              "$ref": "#/components/schemas/LicenseEntitlement"
            }
          },
          "pagination": {
            "description": "The pagination details.",
            "oneOf": [
              {
                "$ref": "#/components/schemas/Pagination"
              }
            ]
          }
        }
      },
      "HateoasCollectionOfLicenseEntitlement": {
        "allOf": [
          {
            "$ref": "#/components/schemas/FilteredResponseOfLicenseEntitlement"
          },
          {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "_links": {
                "description": "A collection of links to related resources.",
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/Link"
                }
              }
            }
          }
        ]
      },
      "ComputerApplicationEntitlement": {
        "allOf": [
          {
            "$ref": "#/components/schemas/HateoasResource"
          },
          {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "computerId": {
                "type": "string",
                "format": "guid"
              },
              "applicationId": {
                "type": "string",
                "format": "guid"
              },
              "metricId": {
                "type": "string",
                "format": "guid"
              },
              "entitlementStateId": {
                "type": "string",
                "format": "guid"
              }
            }
          }
        ]
      },
      "FilteredResponseOfComputerApplicationEntitlement": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "items": {
            "type": "array",
            
            "items": {
              "$ref": "#/components/schemas/ComputerApplicationEntitlement"
            }
          },
          "pagination": {
            "description": "The pagination details.",
            "oneOf": [
              {
                "$ref": "#/components/schemas/Pagination"
              }
            ]
          }
        }
      },
      "HateoasCollectionOfComputerApplicationEntitlement": {
        "allOf": [
          {
            "$ref": "#/components/schemas/FilteredResponseOfComputerApplicationEntitlement"
          },
          {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "_links": {
                "description": "A collection of links to related resources.",
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/Link"
                }
              }
            }
          }
        ]
      },
      "EntitlementState": {
        "allOf": [
          {
            "$ref": "#/components/schemas/HateoasResource"
          },
          {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "id": {
                "type": "string",
                "format": "guid"
              },
              "name": {
                "type": "string"
              },
              "description": {
                "type": "string"
              }
            }
          }
        ]
      },
      "ExtendedCoverageType": {
        "allOf": [
          {
            "$ref": "#/components/schemas/HateoasResource"
          },
          {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "name": {
                "type": "string"
              }
            }
          }
        ]
      },
      "FilteredResponseOfExtendedCoverageType": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "items": {
            "type": "array",
            
            "items": {
              "$ref": "#/components/schemas/ExtendedCoverageType"
            }
          },
          "pagination": {
            "description": "The pagination details.",
            "oneOf": [
              {
                "$ref": "#/components/schemas/Pagination"
              }
            ]
          }
        }
      },
      "HateoasCollectionOfExtendedCoverageType": {
        "allOf": [
          {
            "$ref": "#/components/schemas/FilteredResponseOfExtendedCoverageType"
          },
          {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "_links": {
                "description": "A collection of links to related resources.",
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/Link"
                }
              }
            }
          }
        ]
      },
      "ExtendedCoverageReason": {
        "type": "string",
        "description": "",
        "x-enumNames": [
          "Other",
          "Passive",
          "Disaster",
          "TestingOrDevelopment"
        ],
        "enum": [
          "Other",
          "Passive",
          "Disaster",
          "TestingOrDevelopment"
        ]
      },
      "LicenseExtendedCoverage": {
        "allOf": [
          {
            "$ref": "#/components/schemas/HateoasResource"
          },
          {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "id": {
                "type": "string",
                "format": "guid"
              },
              "parentComputerId": {
                "type": "string",
                "format": "guid"
              },
              "isParentComputerDatacenter": {
                "type": "boolean"
              },
              "extendedComputerId": {
                "type": "string",
                "format": "guid"
              },
              "applicationId": {
                "type": "string",
                "format": "guid"
              },
              "coveredApplicationId": {
                "type": "string",
                "format": "guid",
                "nullable": true
              },
              "reason": {
                "$ref": "#/components/schemas/ExtendedCoverageReason"
              },
              "reasonDescription": {
                "type": "string",
                "nullable": true
              }
            }
          }
        ]
      },
      "FilteredResponseOfLicenseExtendedCoverage": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "items": {
            "type": "array",
            
            "items": {
              "$ref": "#/components/schemas/LicenseExtendedCoverage"
            }
          },
          "pagination": {
            "description": "The pagination details.",
            "oneOf": [
              {
                "$ref": "#/components/schemas/Pagination"
              }
            ]
          }
        }
      },
      "HateoasCollectionOfLicenseExtendedCoverage": {
        "allOf": [
          {
            "$ref": "#/components/schemas/FilteredResponseOfLicenseExtendedCoverage"
          },
          {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "_links": {
                "description": "A collection of links to related resources.",
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/Link"
                }
              }
            }
          }
        ]
      },
      "LicenseCost": {
        "allOf": [
          {
            "$ref": "#/components/schemas/HateoasResource"
          },
          {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "licenseId": {
                "type": "string",
                "format": "guid"
              },
              "organizationId": {
                "type": "string",
                "format": "guid"
              },
              "licenseQuantity": {
                "type": "integer",
                "format": "int32"
              },
              "licensePurchaseCost": {
                "type": "number",
                "format": "decimal"
              },
              "currentMaintenanceCost": {
                "type": "number",
                "format": "decimal"
              },
              "accumulatedMaintenanceCost": {
                "type": "number",
                "format": "decimal"
              },
              "currentSupportCost": {
                "type": "number",
                "format": "decimal"
              },
              "accumulatedSupportCost": {
                "type": "number",
                "format": "decimal"
              },
              "totalCost": {
                "type": "number",
                "format": "decimal"
              },
              "currency": {
                "type": "string"
              }
            }
          }
        ]
      },
      "FilteredResponseOfLicenseCost": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "items": {
            "type": "array",
            
            "items": {
              "$ref": "#/components/schemas/LicenseCost"
            }
          },
          "pagination": {
            "description": "The pagination details.",
            "oneOf": [
              {
                "$ref": "#/components/schemas/Pagination"
              }
            ]
          }
        }
      },
      "HateoasCollectionOfLicenseCost": {
        "allOf": [
          {
            "$ref": "#/components/schemas/FilteredResponseOfLicenseCost"
          },
          {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "_links": {
                "description": "A collection of links to related resources.",
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/Link"
                }
              }
            }
          }
        ]
      },
      "LicenseCostSummary": {
        "allOf": [
          {
            "$ref": "#/components/schemas/HateoasResource"
          },
          {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "licenseId": {
                "type": "string",
                "format": "guid"
              },
              "quantity": {
                "type": "integer",
                "format": "int32"
              },
              "purchaseCost": {
                "type": "number",
                "format": "decimal"
              },
              "currentMaintenanceCost": {
                "type": "number",
                "format": "decimal"
              },
              "accumulatedMaintenanceCost": {
                "type": "number",
                "format": "decimal"
              },
              "currentSupportCost": {
                "type": "number",
                "format": "decimal"
              },
              "accumulatedSupportCost": {
                "type": "number",
                "format": "decimal"
              },
              "totalCost": {
                "type": "number",
                "format": "decimal"
              },
              "averageCostPerLicensePurchase": {
                "type": "number",
                "format": "decimal"
              },
              "currency": {
                "type": "string"
              }
            }
          }
        ]
      },
      "ComputerAssignment": {
        "allOf": [
          {
            "$ref": "#/components/schemas/HateoasResource"
          },
          {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "id": {
                "type": "string",
                "format": "guid"
              },
              "licenseId": {
                "type": "string",
                "format": "guid"
              },
              "applicationId": {
                "type": "string",
                "format": "guid",
                "nullable": true
              },
              "computerId": {
                "type": "string",
                "format": "guid"
              },
              "quantity": {
                "type": "integer",
                "format": "int32",
                "nullable": true
              }
            }
          }
        ]
      },
      "FilteredResponseOfComputerAssignment": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "items": {
            "type": "array",
            
            "items": {
              "$ref": "#/components/schemas/ComputerAssignment"
            }
          },
          "pagination": {
            "description": "The pagination details.",
            "oneOf": [
              {
                "$ref": "#/components/schemas/Pagination"
              }
            ]
          }
        }
      },
      "HateoasCollectionOfComputerAssignment": {
        "allOf": [
          {
            "$ref": "#/components/schemas/FilteredResponseOfComputerAssignment"
          },
          {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "_links": {
                "description": "A collection of links to related resources.",
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/Link"
                }
              }
            }
          }
        ]
      },
      "DatacenterAssignment": {
        "allOf": [
          {
            "$ref": "#/components/schemas/HateoasResource"
          },
          {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "id": {
                "type": "string",
                "format": "guid"
              },
              "licenseId": {
                "type": "string",
                "format": "guid"
              },
              "applicationId": {
                "type": "string",
                "format": "guid"
              },
              "datacenterId": {
                "type": "string",
                "format": "guid"
              },
              "quantity": {
                "type": "integer",
                "format": "int32",
                "nullable": true
              }
            }
          }
        ]
      },
      "FilteredResponseOfDatacenterAssignment": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "items": {
            "type": "array",
            
            "items": {
              "$ref": "#/components/schemas/DatacenterAssignment"
            }
          },
          "pagination": {
            "description": "The pagination details.",
            "oneOf": [
              {
                "$ref": "#/components/schemas/Pagination"
              }
            ]
          }
        }
      },
      "HateoasCollectionOfDatacenterAssignment": {
        "allOf": [
          {
            "$ref": "#/components/schemas/FilteredResponseOfDatacenterAssignment"
          },
          {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "_links": {
                "description": "A collection of links to related resources.",
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/Link"
                }
              }
            }
          }
        ]
      },
      "LicenseAssignmentDetails": {
        "allOf": [
          {
            "$ref": "#/components/schemas/HateoasResource"
          },
          {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "licenseId": {
                "type": "string",
                "format": "guid"
              },
              "hasOrganizationAssignment": {
                "type": "boolean"
              },
              "hasComputerAssignment": {
                "type": "boolean"
              },
              "hasUserAssignment": {
                "type": "boolean"
              },
              "hasSiteAssignment": {
                "type": "boolean"
              }
            }
          }
        ]
      },
      "OrganizationAssignment": {
        "allOf": [
          {
            "$ref": "#/components/schemas/HateoasResource"
          },
          {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "id": {
                "type": "string",
                "format": "guid"
              },
              "licenseId": {
                "type": "string",
                "format": "guid"
              },
              "applicationId": {
                "type": "string",
                "format": "guid",
                "nullable": true
              },
              "organizationId": {
                "type": "string",
                "format": "guid"
              },
              "quantity": {
                "type": "integer",
                "format": "int32",
                "nullable": true
              }
            }
          }
        ]
      },
      "FilteredResponseOfOrganizationAssignment": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "items": {
            "type": "array",
            
            "items": {
              "$ref": "#/components/schemas/OrganizationAssignment"
            }
          },
          "pagination": {
            "description": "The pagination details.",
            "oneOf": [
              {
                "$ref": "#/components/schemas/Pagination"
              }
            ]
          }
        }
      },
      "HateoasCollectionOfOrganizationAssignment": {
        "allOf": [
          {
            "$ref": "#/components/schemas/FilteredResponseOfOrganizationAssignment"
          },
          {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "_links": {
                "description": "A collection of links to related resources.",
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/Link"
                }
              }
            }
          }
        ]
      },
      "SiteAssignment": {
        "allOf": [
          {
            "$ref": "#/components/schemas/HateoasResource"
          },
          {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "id": {
                "type": "string",
                "format": "guid"
              },
              "licenseId": {
                "type": "string",
                "format": "guid"
              },
              "applicationId": {
                "type": "string",
                "format": "guid",
                "nullable": true
              },
              "organizationId": {
                "type": "string",
                "format": "guid"
              },
              "quantity": {
                "type": "integer",
                "format": "int32",
                "nullable": true
              }
            }
          }
        ]
      },
      "UserAssignment": {
        "allOf": [
          {
            "$ref": "#/components/schemas/HateoasResource"
          },
          {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "id": {
                "type": "string",
                "example" : "882ceb2d-1d5a-41e2-b25c-9cca9e694990",
                "format": "guid"
              },
              "licenseId": {
                "type": "string",
                "example" : "547b6e50-6802-4ca0-86a9-e7051a92dc21",
                "format": "guid"
              },
              "applicationId": {
                "type": "string",
                "example" : "02f1bf0e-6340-4da3-9702-a06de2cd020b",
                "format": "guid"
              },
              "userId": {
                "type": "string",
                "example" : "351d6259-831e-4478-8ad4-8a11500c5731",
                "format": "guid"
              },
              "quantity": {
                "type": "integer",
                "example": "1",
                "format": "int32"
              }
            }
          }
        ]
      },
      "FilteredResponseOfUserAssignment": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "items": {
            "type": "array",
            
            "items": {
              "$ref": "#/components/schemas/UserAssignment"
            }
          },
          "pagination": {
            "description": "The pagination details.",
            "oneOf": [
              {
                "$ref": "#/components/schemas/Pagination"
              }
            ]
          }
        }
      },
      "HateoasCollectionOfUserAssignment": {
        "allOf": [
          {
            "$ref": "#/components/schemas/FilteredResponseOfUserAssignment"
          },
          {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "_links": {
                "description": "A collection of links to related resources.",
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/Link"
                }
              }
            }
          }
        ]
      }
    },
    "securitySchemes": {
      "BearerAuth": {
        "type": "http",
        "scheme": "bearer",
        "bearerFormat": "JWT"
      }
    }
  }
}