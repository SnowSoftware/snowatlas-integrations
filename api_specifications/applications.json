{
  "openapi": "3.0.0",
  "info": {
    "title": "SAM Applications",
    "contact": {
      "name": "Snow Software, Inc.",
      "url": "https://www.snowsoftware.com"
    },
    "version": "1.0.0"
  },
  "servers": [
    {
      "url": "https://{region}.snowsoftware.io",
      "description": "You can find your **Data region** in the **Snow Atlas settings** menu, in **License details**. Your **Data region** is on the **General information** tab. For further information, see [General information](https://docs.snowsoftware.com/snow-atlas/en/UUID-2d4ce22b-e2a9-b7b0-44b8-0ecc55c2959f.html#UUID-2d4ce22b-e2a9-b7b0-44b8-0ecc55c2959f_section-idm4543865842761633102149279789 \"https://docs.snowsoftware.com/snow-atlas/en/UUID-2d4ce22b-e2a9-b7b0-44b8-0ecc55c2959f.html#UUID-2d4ce22b-e2a9-b7b0-44b8-0ecc55c2959f_section-idm4543865842761633102149279789\").",
      "variables": {
        "region": {
          "enum": [
            "westeurope",
            "australiasoutheast",
            "eastus2",
            "uksouth"
          ],
          "default": "westeurope"
        }
      }
    }
  ],
  "paths": {
    "/api/sam/software-registry/v1/applications/{id:uuid}/alert-settings": {
      "get": {
        "summary": "",
        "description": "Returns the alert settings for an application.",
        "operationId": "alert-settings",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK: Your request succeeded.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Application"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request: Your request is invalid or improperly formed. Consequently, the API server could not understand your request.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Not Found: The operation you requested failed because a resource associated with your request could not be found.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error: Your request failed due to an internal error.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "BearerAuth": [
              "sam.application.r"
            ]
          }
        ]
      }
    },
    "/api/sam/software-registry/v1/applications-allowlist": {
      "get": {
        "summary": "",
        "description": "Returns a collection of allowed applications.",
        "operationId": "applications-allowlist",
        "parameters": [
          {
            "name": "page_number",
            "in": "query",
            "description": "The page number.",
            "schema": {
              "type": "integer",
              "default": 1,
              "minimum": 1.0
            }
          },
          {
            "name": "page_size",
            "in": "query",
            "description": "The maximum number of items in the response.",
            "schema": {
              "type": "integer",
              "default": 100,
              "minimum": 1.0
            }
          },
          {
            "name": "filter",
            "in": "query",
            "description": "The fields which you can use to filter the results. Format of the query string parameter:\n```\n?filter=<filter name> <operator> <value>\n```\nFilter name | Description | Data type | Example\n:--- | --- | --- | ---\n\nFor more information on the available operators and which data types those operators work on, see [Filter API call results](https://docs.snowsoftware.io/snow-atlas-api/resources/get-started-with-apis/api-conventions#filter-api-call-results).\n",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK: Your request succeeded.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HateoasCollectionOfAllowedApplicationIdentifier"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request: Your request is invalid or improperly formed. Consequently, the API server could not understand your request.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error: Your request failed due to an internal error.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "BearerAuth": [
              "sam.application.r"
            ]
          }
        ]
      }
    },
    "/api/sam/software-registry/v1/article-numbers": {
      "get": {
        "summary": "",
        "description": "Returns a collection of application article numbers.",
        "operationId": "article-numbers",
        "parameters": [
          {
            "name": "page_number",
            "in": "query",
            "description": "The page number.",
            "schema": {
              "type": "integer",
              "default": 1,
              "minimum": 1.0
            }
          },
          {
            "name": "page_size",
            "in": "query",
            "description": "The maximum number of items in the response.",
            "schema": {
              "type": "integer",
              "default": 100,
              "minimum": 1.0
            }
          },
          {
            "name": "filter",
            "in": "query",
            "description": "The fields which you can use to filter the results. Format of the query string parameter:\n```\n?filter=<filter name> <operator> <value>\n```\nFilter name | Description | Data type | Example\n:--- | --- | --- | ---\n\nFor more information on the available operators and which data types those operators work on, see [Filter API call results](https://docs.snowsoftware.io/snow-atlas-api/resources/get-started-with-apis/api-conventions#filter-api-call-results).\n",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK: Your request succeeded.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HateoasCollectionOfApplicationArticleNumber"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request: Your request is invalid or improperly formed. Consequently, the API server could not understand your request.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error: Your request failed due to an internal error.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "BearerAuth": [
              "sam.application.r"
            ]
          }
        ]
      }
    },
    "/api/sam/software-registry/v1/article-numbers/{id}": {
      "get": {
        "summary": "",
        "description": "Returns details of an application article number.",
        "operationId": "article-numbers2",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK: Your request succeeded.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApplicationArticleNumber"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request: Your request is invalid or improperly formed. Consequently, the API server could not understand your request.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Not Found: The operation you requested failed because a resource associated with your request could not be found.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error: Your request failed due to an internal error.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "BearerAuth": [
              "sam.application.r"
            ]
          }
        ]
      }
    },
    "/api/sam/software-registry/v1/applications": {
      "get": {
        "summary": "",
        "description": "Returns a collection of applications.",
        "operationId": "applications",
        "parameters": [
          {
            "name": "page_number",
            "in": "query",
            "description": "The page number.",
            "schema": {
              "type": "integer",
              "default": 1,
              "minimum": 1.0
            }
          },
          {
            "name": "page_size",
            "in": "query",
            "description": "The maximum number of items in the response.",
            "schema": {
              "type": "integer",
              "default": 100,
              "minimum": 1.0
            }
          },
          {
            "name": "filter",
            "in": "query",
            "description": "The fields which you can use to filter the results. Format of the query string parameter:\n```\n?filter=<filter name> <operator> <value>\n```\nFilter name | Description | Data type | Example\n:--- | --- | --- | ---\n\nFor more information on the available operators and which data types those operators work on, see [Filter API call results](https://docs.snowsoftware.io/snow-atlas-api/resources/get-started-with-apis/api-conventions#filter-api-call-results).\n",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK: Your request succeeded.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HateoasCollectionOfApplicationCollection"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request: Your request is invalid or improperly formed. Consequently, the API server could not understand your request.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error: Your request failed due to an internal error.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "BearerAuth": [
              "sam.application.r"
            ]
          }
        ]
      }
    },
    "/api/sam/software-registry/v1/applications/{id:uuid}/compatibility": {
      "get": {
        "summary": "",
        "description": "Returns a collection of compatible applications.",
        "operationId": "compatibility",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "page_number",
            "in": "query",
            "description": "The page number.",
            "schema": {
              "type": "integer",
              "default": 1,
              "minimum": 1.0
            }
          },
          {
            "name": "page_size",
            "in": "query",
            "description": "The maximum number of items in the response.",
            "schema": {
              "type": "integer",
              "default": 100,
              "minimum": 1.0
            }
          },
          {
            "name": "filter",
            "in": "query",
            "description": "The fields which you can use to filter the results. Format of the query string parameter:\n```\n?filter=<filter name> <operator> <value>\n```\nFilter name | Description | Data type | Example\n:--- | --- | --- | ---\n\nFor more information on the available operators and which data types those operators work on, see [Filter API call results](https://docs.snowsoftware.io/snow-atlas-api/resources/get-started-with-apis/api-conventions#filter-api-call-results).\n",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK: Your request succeeded.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HateoasCollectionOfApplicationCompatibility"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request: Your request is invalid or improperly formed. Consequently, the API server could not understand your request.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error: Your request failed due to an internal error.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "BearerAuth": [
              "sam.application.r"
            ]
          }
        ]
      }
    },
    "/api/sam/software-registry/v1/applications/{id:uuid}/compatibility/{compatibilityId}": {
      "get": {
        "summary": "",
        "description": "Returns details of a compatible application.",
        "operationId": "compatibility2",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "compatibilityId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK: Your request succeeded.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApplicationCompatibility"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request: Your request is invalid or improperly formed. Consequently, the API server could not understand your request.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Not Found: The operation you requested failed because a resource associated with your request could not be found.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error: Your request failed due to an internal error.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "BearerAuth": [
              "sam.application.r"
            ]
          }
        ]
      }
    },
    "/api/sam/software-registry/v1/applications/{id:uuid}": {
      "get": {
        "summary": "",
        "description": "Returns details of an application.",
        "operationId": "applications2",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK: Your request succeeded.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Application"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request: Your request is invalid or improperly formed. Consequently, the API server could not understand your request.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Not Found: The operation you requested failed because a resource associated with your request could not be found.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error: Your request failed due to an internal error.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "BearerAuth": [
              "sam.application.r"
            ]
          }
        ]
      },
      "patch": {
        "tags": [
          "Application"
        ],
        "summary": "Update application details.",
        "description": "Updates application details.",
        "operationId": "updateApplication",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateApplication"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK: Your request succeeded.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Application"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request: Your request is invalid or improperly formed. Consequently, the API server could not understand your request.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Not Found: The operation you requested failed because a resource associated with your request could not be found.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error: Your request failed due to an internal error.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "BearerAuth": [
              "sam.application.u"
            ]
          }
        ]
      }
    },
    "/api/sam/software-registry/v1/applications-denylist": {
      "get": {
        "summary": "",
        "description": "Returns a collection of denied applications.",
        "operationId": "applications-denylist",
        "parameters": [
          {
            "name": "page_number",
            "in": "query",
            "description": "The page number.",
            "schema": {
              "type": "integer",
              "default": 1,
              "minimum": 1.0
            }
          },
          {
            "name": "page_size",
            "in": "query",
            "description": "The maximum number of items in the response.",
            "schema": {
              "type": "integer",
              "default": 100,
              "minimum": 1.0
            }
          },
          {
            "name": "filter",
            "in": "query",
            "description": "The fields which you can use to filter the results. Format of the query string parameter:\n```\n?filter=<filter name> <operator> <value>\n```\nFilter name | Description | Data type | Example\n:--- | --- | --- | ---\n\nFor more information on the available operators and which data types those operators work on, see [Filter API call results](https://docs.snowsoftware.io/snow-atlas-api/resources/get-started-with-apis/api-conventions#filter-api-call-results).\n",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK: Your request succeeded.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HateoasCollectionOfDeniedApplicationIdentifier"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request: Your request is invalid or improperly formed. Consequently, the API server could not understand your request.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error: Your request failed due to an internal error.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "BearerAuth": [
              "sam.application.r"
            ]
          }
        ]
      }
    },
    "/api/sam/software-registry/v1/families": {
      "get": {
        "summary": "",
        "description": "Returns a collection of application families.",
        "operationId": "families",
        "parameters": [
          {
            "name": "page_number",
            "in": "query",
            "description": "The page number.",
            "schema": {
              "type": "integer",
              "default": 1,
              "minimum": 1.0
            }
          },
          {
            "name": "page_size",
            "in": "query",
            "description": "The maximum number of items in the response.",
            "schema": {
              "type": "integer",
              "default": 100,
              "minimum": 1.0
            }
          },
          {
            "name": "filter",
            "in": "query",
            "description": "The fields which you can use to filter the results. Format of the query string parameter:\n```\n?filter=<filter name> <operator> <value>\n```\nFilter name | Description | Data type | Example\n:--- | --- | --- | ---\n\nFor more information on the available operators and which data types those operators work on, see [Filter API call results](https://docs.snowsoftware.io/snow-atlas-api/resources/get-started-with-apis/api-conventions#filter-api-call-results).\n",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK: Your request succeeded.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HateoasCollectionOfApplicationFamily"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request: Your request is invalid or improperly formed. Consequently, the API server could not understand your request.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error: Your request failed due to an internal error.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "BearerAuth": [
              "sam.application.r"
            ]
          }
        ]
      }
    },
    "/api/sam/software-registry/v1/families/{id}": {
      "get": {
        "summary": "",
        "description": "Returns details of an application family.",
        "operationId": "families2",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK: Your request succeeded.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApplicationFamily"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request: Your request is invalid or improperly formed. Consequently, the API server could not understand your request.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Not Found: The operation you requested failed because a resource associated with your request could not be found.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error: Your request failed due to an internal error.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "BearerAuth": [
              "sam.application.r"
            ]
          }
        ]
      }
    },
    "/api/sam/software-registry/v1/applications/{id:uuid}/group": {
      "get": {
        "summary": "",
        "description": "Returns a collection of application groups.",
        "operationId": "group",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "page_number",
            "in": "query",
            "description": "The page number.",
            "schema": {
              "type": "integer",
              "default": 1,
              "minimum": 1.0
            }
          },
          {
            "name": "page_size",
            "in": "query",
            "description": "The maximum number of items in the response.",
            "schema": {
              "type": "integer",
              "default": 100,
              "minimum": 1.0
            }
          },
          {
            "name": "filter",
            "in": "query",
            "description": "The fields which you can use to filter the results. Format of the query string parameter:\n```\n?filter=<filter name> <operator> <value>\n```\nFilter name | Description | Data type | Example\n:--- | --- | --- | ---\n\nFor more information on the available operators and which data types those operators work on, see [Filter API call results](https://docs.snowsoftware.io/snow-atlas-api/resources/get-started-with-apis/api-conventions#filter-api-call-results).\n",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK: Your request succeeded.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HateoasCollectionOfApplicationGroup"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request: Your request is invalid or improperly formed. Consequently, the API server could not understand your request.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Not Found: The operation you requested failed because a resource associated with your request could not be found.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error: Your request failed due to an internal error.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "BearerAuth": [
              "sam.application.r"
            ]
          }
        ]
      }
    },
    "/api/sam/software-registry/v1/applications-metadata": {
      "get": {
        "tags": [
          "Application",
          "Metadata"
        ],
        "summary": "Applications enriched with metadata.",
        "description": "Returns a collection of applications that have been enriched with metadata.",
        "operationId": "applicationMetadata",
        "responses": {
          "200": {
            "description": "OK: Your request succeeded.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HateoasCollectionOfMetadataApplicationIdentifier"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request: Your request is invalid or improperly formed. Consequently, the API server could not understand your request.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error: Your request failed due to an internal error.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "BearerAuth": [
              "sam.application.r"
            ]
          }
        ]
      }
    },
    "/api/sam/software-registry/v1/applications/{id:uuid}/metrics": {
      "get": {
        "summary": "",
        "description": "Returns a collection of application metrics.",
        "operationId": "metrics",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "page_number",
            "in": "query",
            "description": "The page number.",
            "schema": {
              "type": "integer",
              "default": 1,
              "minimum": 1.0
            }
          },
          {
            "name": "page_size",
            "in": "query",
            "description": "The maximum number of items in the response.",
            "schema": {
              "type": "integer",
              "default": 100,
              "minimum": 1.0
            }
          },
          {
            "name": "filter",
            "in": "query",
            "description": "The fields which you can use to filter the results. Format of the query string parameter:\n```\n?filter=<filter name> <operator> <value>\n```\nFilter name | Description | Data type | Example\n:--- | --- | --- | ---\n\nFor more information on the available operators and which data types those operators work on, see [Filter API call results](https://docs.snowsoftware.io/snow-atlas-api/resources/get-started-with-apis/api-conventions#filter-api-call-results).\n",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK: Your request succeeded.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HateoasCollectionOfMetric"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request: Your request is invalid or improperly formed. Consequently, the API server could not understand your request.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error: Your request failed due to an internal error.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "BearerAuth": [
              "sam.application.r"
            ]
          }
        ]
      }
    },
    "/api/sam/software-registry/v1/applications/{id:uuid}/metrics/{metricId}": {
      "get": {
        "summary": "",
        "description": "Returns details of an application metric.",
        "operationId": "metrics2",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "metricId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK: Your request succeeded.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Metric"
                }
              }
            }
          },
          "404": {
            "description": "Not Found: The operation you requested failed because a resource associated with your request could not be found.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error: Your request failed due to an internal error.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request: Your request is invalid or improperly formed. Consequently, the API server could not understand your request.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "BearerAuth": [
              "sam.application.r"
            ]
          }
        ]
      }
    },
    "/api/sam/software-registry/v1/applications/{id:uuid}/skus": {
      "get": {
        "summary": "",
        "description": "Returns details of an application SKU.",
        "operationId": "skus",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK: Your request succeeded.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HateoasCollectionOfStockKeepingUnit"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request: Your request is invalid or improperly formed. Consequently, the API server could not understand your request.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Not Found: The operation you requested failed because a resource associated with your request could not be found.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error: Your request failed due to an internal error.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "BearerAuth": [
              "sam.application.r"
            ]
          }
        ]
      }
    },
    "/api/sam/software-registry/v1/skus/{id:uuid}/applications": {
      "get": {
        "tags": [
          "Stock keeping units"
        ],
        "summary": "Get a list of applications for SKU",
        "description": "Returns a collection of applications for a given Stock Keeping Unit.",
        "operationId": "applications3",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK: Your request succeeded.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HateoasCollectionOfSkuApplication"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request: Your request is invalid or improperly formed. Consequently, the API server could not understand your request.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Not Found: The operation you requested failed because a resource associated with your request could not be found.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error: Your request failed due to an internal error.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "BearerAuth": [
              "sam.application.r"
            ]
          }
        ]
      }
    },
    "/api/sam/software-registry/v1/applications/{id:uuid}/store": {
      "get": {
        "summary": "",
        "description": "Returns details of an application store.",
        "operationId": "store",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK: Your request succeeded.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApplicationStore"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request: Your request is invalid or improperly formed. Consequently, the API server could not understand your request.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Not Found: The operation you requested failed because a resource associated with your request could not be found.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error: Your request failed due to an internal error.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "BearerAuth": [
              "sam.application.r"
            ]
          }
        ]
      }
    },
    "/api/sam/software-registry/v1/applications-using-custom-metrics": {
      "post": {
        "summary": "",
        "description": "Returns a collection of applications referencing the given custom metrics.",
        "operationId": "applications-using-custom-metrics",
        "parameters": [
          {
            "name": "page_number",
            "in": "query",
            "description": "The page number.",
            "schema": {
              "type": "integer",
              "default": 1,
              "minimum": 1.0
            }
          },
          {
            "name": "page_size",
            "in": "query",
            "description": "The maximum number of items in the response.",
            "schema": {
              "type": "integer",
              "default": 100,
              "minimum": 1.0
            }
          },
          {
            "name": "filter",
            "in": "query",
            "description": "The fields which you can use to filter the results. Format of the query string parameter:\n```\n?filter=<filter name> <operator> <value>\n```\nFilter name | Description | Data type | Example\n:--- | --- | --- | ---\n\nFor more information on the available operators and which data types those operators work on, see [Filter API call results](https://docs.snowsoftware.io/snow-atlas-api/resources/get-started-with-apis/api-conventions#filter-api-call-results).\n",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ApplicationsUsingCustomMetricRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK: Your request succeeded.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HateoasCollectionOfApplicationsCustomMetric"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request: Your request is invalid or improperly formed. Consequently, the API server could not understand your request.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error: Your request failed due to an internal error.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "BearerAuth": [
              "sam.application.r"
            ]
          }
        ]
      }
    },
    "/api/sam/software-registry/v1/types": {
      "get": {
        "summary": "",
        "description": "Returns a collection of application types.",
        "operationId": "types",
        "parameters": [
          {
            "name": "page_number",
            "in": "query",
            "description": "The page number.",
            "schema": {
              "type": "integer",
              "default": 1,
              "minimum": 1.0
            }
          },
          {
            "name": "page_size",
            "in": "query",
            "description": "The maximum number of items in the response.",
            "schema": {
              "type": "integer",
              "default": 100,
              "minimum": 1.0
            }
          },
          {
            "name": "filter",
            "in": "query",
            "description": "The fields which you can use to filter the results. Format of the query string parameter:\n```\n?filter=<filter name> <operator> <value>\n```\nFilter name | Description | Data type | Example\n:--- | --- | --- | ---\n\nFor more information on the available operators and which data types those operators work on, see [Filter API call results](https://docs.snowsoftware.io/snow-atlas-api/resources/get-started-with-apis/api-conventions#filter-api-call-results).\n",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HateoasCollectionOfApplicationType"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request: Your request is invalid or improperly formed. Consequently, the API server could not understand your request.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error: Your request failed due to an internal error.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "BearerAuth": [
              "sam.application.r"
            ]
          }
        ]
      }
    },
    "/api/sam/software-registry/v1/applications/{id:uuid}/types": {
      "get": {
        "summary": "",
        "description": "Returns a collection of application types for a given application.",
        "operationId": "types2",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "page_number",
            "in": "query",
            "description": "The page number.",
            "schema": {
              "type": "integer",
              "default": 1,
              "minimum": 1.0
            }
          },
          {
            "name": "page_size",
            "in": "query",
            "description": "The maximum number of items in the response.",
            "schema": {
              "type": "integer",
              "default": 100,
              "minimum": 1.0
            }
          },
          {
            "name": "filter",
            "in": "query",
            "description": "The fields which you can use to filter the results. Format of the query string parameter:\n```\n?filter=<filter name> <operator> <value>\n```\nFilter name | Description | Data type | Example\n:--- | --- | --- | ---\n\nFor more information on the available operators and which data types those operators work on, see [Filter API call results](https://docs.snowsoftware.io/snow-atlas-api/resources/get-started-with-apis/api-conventions#filter-api-call-results).\n",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK: Your request succeeded.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HateoasCollectionOfApplicationType"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request: Your request is invalid or improperly formed. Consequently, the API server could not understand your request.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Not Found: The operation you requested failed because a resource associated with your request could not be found.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error: Your request failed due to an internal error.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "BearerAuth": [
              "sam.application.r"
            ]
          }
        ]
      }
    },
    "/api/sam/software-registry/v1/types/{id}": {
      "get": {
        "summary": "",
        "description": "Returns details of an application type.",
        "operationId": "types3",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK: Your request succeeded.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApplicationType"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request: Your request is invalid or improperly formed. Consequently, the API server could not understand your request.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Not Found: The operation you requested failed because a resource associated with your request could not be found.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error: Your request failed due to an internal error.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "BearerAuth": [
              "sam.application.r"
            ]
          }
        ]
      }
    },
    "/api/sam/software-registry/v1/applications/{id:uuid}/bundle/{childId}": {
      "get": {
        "summary": "",
        "description": "Returns details of an application bundle.",
        "operationId": "bundle",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "childId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK: Your request succeeded.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Bundle"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request: Your request is invalid or improperly formed. Consequently, the API server could not understand your request.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Not Found: The operation you requested failed because a resource associated with your request could not be found.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error: Your request failed due to an internal error.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "BearerAuth": [
              "sam.application.r"
            ]
          }
        ]
      }
    },
    "/api/sam/software-registry/v1/applications/{id:uuid}/bundle": {
      "get": {
        "summary": "",
        "description": "Returns a collection of application bundles.",
        "operationId": "bundle2",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "page_number",
            "in": "query",
            "description": "The page number.",
            "schema": {
              "type": "integer",
              "default": 1,
              "minimum": 1.0
            }
          },
          {
            "name": "page_size",
            "in": "query",
            "description": "The maximum number of items in the response.",
            "schema": {
              "type": "integer",
              "default": 100,
              "minimum": 1.0
            }
          },
          {
            "name": "filter",
            "in": "query",
            "description": "The fields which you can use to filter the results. Format of the query string parameter:\n```\n?filter=<filter name> <operator> <value>\n```\nFilter name | Description | Data type | Example\n:--- | --- | --- | ---\n\nFor more information on the available operators and which data types those operators work on, see [Filter API call results](https://docs.snowsoftware.io/snow-atlas-api/resources/get-started-with-apis/api-conventions#filter-api-call-results).\n",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK: Your request succeeded.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HateoasCollectionOfBundle"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request: Your request is invalid or improperly formed. Consequently, the API server could not understand your request.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Not Found: The operation you requested failed because a resource associated with your request could not be found.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error: Your request failed due to an internal error.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "BearerAuth": [
              "sam.application.r"
            ]
          }
        ]
      }
    },
    "/api/sam/software-registry/v1/platforms": {
      "get": {
        "summary": "",
        "description": "Returns a collection of application platforms.",
        "operationId": "platforms",
        "parameters": [
          {
            "name": "page_number",
            "in": "query",
            "description": "The page number.",
            "schema": {
              "type": "integer",
              "default": 1,
              "minimum": 1.0
            }
          },
          {
            "name": "page_size",
            "in": "query",
            "description": "The maximum number of items in the response.",
            "schema": {
              "type": "integer",
              "default": 100,
              "minimum": 1.0
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK: Your request succeeded.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HateoasCollectionOfPlatformType"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request: Your request is invalid or improperly formed. Consequently, the API server could not understand your request.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error: Your request failed due to an internal error.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "BearerAuth": [
              "sam.application.r"
            ]
          }
        ]
      }
    }
  },
  "components": {
    "schemas": {
      "PlatformType": {
        "type": "string",
        "description": "",
        "x-enumNames": [
          "Windows",
          "MacOSX",
          "Linux",
          "HPUX",
          "Solaris",
          "Aix",
          "WMware",
          "Citrix",
          "iOS",
          "Android",
          "ChromeOS",
          "WindowsPhone",
          "Symbian",
          "Blackberry",
          "Mainframe",
          "CrossPlatform",
          "None"
        ],
        "enum": [
          "Windows",
          "MacOSX",
          "Linux",
          "HPUX",
          "Solaris",
          "Aix",
          "WMware",
          "Citrix",
          "iOS",
          "Android",
          "ChromeOS",
          "WindowsPhone",
          "Symbian",
          "Blackberry",
          "Mainframe",
          "CrossPlatform",
          "None"
        ]
      },
      "ApplicationMetric": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "id": {
            "type": "string",
            "format": "guid"
          },
          "name": {
            "type": "string"
          },
          "isDefault": {
            "type": "boolean"
          }
        }
      },
      "Link": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "href": {
            "type": "string",
            "nullable": true
          },
          "rel": {
            "type": "string",
            "nullable": true
          },
          "method": {
            "type": "string",
            "nullable": true
          }
        }
      },
      "HateoasResource": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "_links": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Link"
            }
          }
        }
      },
      "Application": {
        "allOf": [
          {
            "$ref": "#/components/schemas/HateoasResource"
          },
          {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "id": {
                "type": "string",
                "format": "guid"
              },
              "name": {
                "type": "string"
              },
              "description": {
                "type": "string",
                "nullable": true
              },
              "metrics": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/ApplicationMetric"
                }
              },
              "manufacturerId": {
                "type": "string",
                "format": "guid"
              },
              "manufacturer": {
                "type": "string"
              },
              "manufacturerWebsite": {
                "type": "string",
                "nullable": true
              },
              "language": {
                "type": "string"
              },
              "overridesApplicationId": {
                "type": "string",
                "format": "guid",
                "nullable": true
              },
              "isOs": {
                "type": "boolean"
              },
              "isGroup": {
                "type": "boolean"
              },
              "isBundle": {
                "type": "boolean"
              },
              "isHidden": {
                "type": "boolean"
              },
              "isNoLicenseRequired": {
                "type": "boolean"
              },
              "isGloballyGeneratedApplication": {
                "type": "boolean"
              },
              "familyId": {
                "type": "string",
                "format": "guid",
                "nullable": true
              },
              "editionIndex": {
                "type": "integer",
                "format": "int32"
              },
              "versionIndex": {
                "type": "integer",
                "format": "int32"
              },
              "isWebApplication": {
                "type": "boolean",
                "nullable": true
              },
              "updatedDate": {
                "type": "string",
                "format": "date-time",
                "nullable": true
              },
              "releaseDate": {
                "type": "string",
                "format": "date-time",
                "nullable": true
              },
              "endOfSupportDate": {
                "type": "string",
                "format": "date-time",
                "nullable": true
              },
              "endOfLifeDate": {
                "type": "string",
                "format": "date-time",
                "nullable": true
              },
              "endOfExtendedSupportDate": {
                "type": "string",
                "format": "date-time",
                "nullable": true
              },
              "isEndOfLife": {
                "type": "boolean",
                "nullable": true
              },
              "isEndOfSupport": {
                "type": "boolean",
                "nullable": true
              },
              "isEndOfExtendedSupport": {
                "type": "boolean",
                "nullable": true
              },
              "isReleaseDateNotAnnounced": {
                "type": "boolean",
                "nullable": true
              },
              "isEndOfSupportDateNotAnnounced": {
                "type": "boolean",
                "nullable": true
              },
              "isEndOfLifeDateNotAnnounced": {
                "type": "boolean",
                "nullable": true
              },
              "isEndOfExtendedSupportDateNotAnnounced": {
                "type": "boolean",
                "nullable": true
              },
              "platform": {
                "$ref": "#/components/schemas/PlatformType"
              },
              "applicationTypes": {
                "type": "string",
                "nullable": true
              },
              "downgradeTo": {
                "type": "string",
                "nullable": true
              },
              "upgradeTo": {
                "type": "string",
                "nullable": true
              },
              "downgradeInstance": {
                "type": "integer",
                "format": "int32"
              },
              "isLicensedBasedOnCoreFactors": {
                "type": "boolean"
              },
              "media": {
                "type": "string",
                "nullable": true
              },
              "isSecondaryUseRightsEnabled": {
                "type": "boolean",
                "nullable": true
              },
              "serialNumbersLicenseKeys": {
                "type": "string",
                "nullable": true
              },
              "isSimultaneousMultipleEditionsAllowed": {
                "type": "boolean",
                "nullable": true
              },
              "isSimultaneousMultipleVersionsAllowed": {
                "type": "boolean",
                "nullable": true
              },
              "isApplyMetricsToUpgradeDowngradePathAllowed": {
                "type": "boolean",
                "nullable": true
              },
              "isApplyMetricsToCrossEditionPathAllowed": {
                "type": "boolean",
                "nullable": true
              },
              "systemOwner": {
                "type": "string",
                "nullable": true
              },
              "systemOwnerPhone": {
                "type": "string",
                "nullable": true
              },
              "systemOwnerEmail": {
                "type": "string",
                "nullable": true
              },
              "licenseCostBase": {
                "type": "number",
                "format": "decimal",
                "nullable": true
              },
              "applicationUrl": {
                "type": "string",
                "nullable": true
              },
              "privacyPolicyUrl": {
                "type": "string",
                "nullable": true
              },
              "termsAndConditionsUrl": {
                "type": "string",
                "nullable": true
              }
            }
          }
        ]
      },
      "ErrorContent": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "code": {
            "type": "integer",
            "format": "int32"
          },
          "message": {
            "type": "string"
          }
        }
      },
      "ErrorResponse": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "error": {
            "$ref": "#/components/schemas/ErrorContent"
          }
        }
      },
      "Pagination": {
        "type": "object",
        "additionalProperties": false,
        "required": [
          "page_size",
          "page_number"
        ],
        "properties": {
          "page_size": {
            "type": "integer",
            "format": "int32"
          },
          "page_number": {
            "type": "integer",
            "format": "int32"
          },
          "total_pages": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "total_items": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          }
        }
      },
      "AllowedApplicationIdentifier": {
        "allOf": [
          {
            "$ref": "#/components/schemas/HateoasResource"
          },
          {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "applicationId": {
                "type": "string",
                "format": "guid"
              }
            }
          }
        ]
      },
      "FilteredResponseOfAllowedApplicationIdentifier": {
        "type": "object",
        "additionalProperties": false,
        "required": [
          "items",
          "pagination"
        ],
        "properties": {
          "items": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/AllowedApplicationIdentifier"
            }
          },
          "pagination": {
            "$ref": "#/components/schemas/Pagination"
          }
        }
      },
      "HateoasCollectionOfAllowedApplicationIdentifier": {
        "allOf": [
          {
            "$ref": "#/components/schemas/FilteredResponseOfAllowedApplicationIdentifier"
          },
          {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "_links": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/Link"
                }
              }
            }
          }
        ]
      },
      "ArticleNumberType": {
        "type": "string",
        "description": "",
        "x-enumNames": [
          "Reseller",
          "Manufacturer",
          "SKU"
        ],
        "enum": [
          "Reseller",
          "Manufacturer",
          "SKU"
        ]
      },
      "ApplicationArticleNumber": {
        "allOf": [
          {
            "$ref": "#/components/schemas/HateoasResource"
          },
          {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "id": {
                "type": "string",
                "format": "guid"
              },
              "applicationId": {
                "type": "string",
                "format": "guid"
              },
              "type": {
                "$ref": "#/components/schemas/ArticleNumberType"
              },
              "articleNumber": {
                "type": "string"
              }
            }
          }
        ]
      },
      "FilteredResponseOfApplicationArticleNumber": {
        "type": "object",
        "additionalProperties": false,
        "required": [
          "items",
          "pagination"
        ],
        "properties": {
          "items": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ApplicationArticleNumber"
            }
          },
          "pagination": {
            "$ref": "#/components/schemas/Pagination"
          }
        }
      },
      "HateoasCollectionOfApplicationArticleNumber": {
        "allOf": [
          {
            "$ref": "#/components/schemas/FilteredResponseOfApplicationArticleNumber"
          },
          {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "_links": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/Link"
                }
              }
            }
          }
        ]
      },
      "ApplicationCollection": {
        "allOf": [
          {
            "$ref": "#/components/schemas/HateoasResource"
          },
          {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "id": {
                "type": "string",
                "format": "guid"
              },
              "name": {
                "type": "string"
              },
              "metrics": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/ApplicationMetric"
                }
              },
              "manufacturerId": {
                "type": "string",
                "format": "guid"
              },
              "manufacturer": {
                "type": "string"
              },
              "overridesApplicationId": {
                "type": "string",
                "format": "guid",
                "nullable": true
              },
              "isOs": {
                "type": "boolean"
              },
              "isGroup": {
                "type": "boolean"
              },
              "isBundle": {
                "type": "boolean"
              },
              "isHidden": {
                "type": "boolean"
              },
              "isNoLicenseRequired": {
                "type": "boolean"
              },
              "isGloballyGeneratedApplication": {
                "type": "boolean"
              },
              "familyId": {
                "type": "string",
                "format": "guid",
                "nullable": true
              },
              "editionIndex": {
                "type": "integer",
                "format": "int32"
              },
              "versionIndex": {
                "type": "integer",
                "format": "int32"
              },
              "isWebApplication": {
                "type": "boolean",
                "nullable": true
              },
              "updatedDate": {
                "type": "string",
                "format": "date-time",
                "nullable": true
              },
              "releaseDate": {
                "type": "string",
                "format": "date-time",
                "nullable": true
              },
              "endOfSupportDate": {
                "type": "string",
                "format": "date-time",
                "nullable": true
              },
              "endOfLifeDate": {
                "type": "string",
                "format": "date-time",
                "nullable": true
              },
              "endOfExtendedSupportDate": {
                "type": "string",
                "format": "date-time",
                "nullable": true
              },
              "isEndOfLife": {
                "type": "boolean",
                "nullable": true
              },
              "isEndOfSupport": {
                "type": "boolean",
                "nullable": true
              },
              "isEndOfExtendedSupport": {
                "type": "boolean",
                "nullable": true
              },
              "isReleaseDateNotAnnounced": {
                "type": "boolean",
                "nullable": true
              },
              "isEndOfSupportDateNotAnnounced": {
                "type": "boolean",
                "nullable": true
              },
              "isEndOfLifeDateNotAnnounced": {
                "type": "boolean",
                "nullable": true
              },
              "isEndOfExtendedSupportDateNotAnnounced": {
                "type": "boolean",
                "nullable": true
              },
              "platform": {
                "$ref": "#/components/schemas/PlatformType"
              }
            }
          }
        ]
      },
      "FilteredResponseOfApplicationCollection": {
        "type": "object",
        "additionalProperties": false,
        "required": [
          "items",
          "pagination"
        ],
        "properties": {
          "items": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ApplicationCollection"
            }
          },
          "pagination": {
            "$ref": "#/components/schemas/Pagination"
          }
        }
      },
      "HateoasCollectionOfApplicationCollection": {
        "allOf": [
          {
            "$ref": "#/components/schemas/FilteredResponseOfApplicationCollection"
          },
          {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "_links": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/Link"
                }
              }
            }
          }
        ]
      },
      "CompatibilityType": {
        "type": "string",
        "description": "",
        "x-enumNames": [
          "Downgrade",
          "Upgrade"
        ],
        "enum": [
          "Downgrade",
          "Upgrade"
        ]
      },
      "ApplicationCompatibility": {
        "allOf": [
          {
            "$ref": "#/components/schemas/HateoasResource"
          },
          {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "applicationId": {
                "type": "string",
                "format": "guid"
              },
              "compatibleApplicationId": {
                "type": "string",
                "format": "guid"
              },
              "compatibilityType": {
                "$ref": "#/components/schemas/CompatibilityType"
              },
              "compatibilityOrder": {
                "type": "integer",
                "format": "int32"
              },
              "compatibilityApplicationName": {
                "type": "string",
                "nullable": true
              }
            }
          }
        ]
      },
      "FilteredResponseOfApplicationCompatibility": {
        "type": "object",
        "additionalProperties": false,
        "required": [
          "items",
          "pagination"
        ],
        "properties": {
          "items": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ApplicationCompatibility"
            }
          },
          "pagination": {
            "$ref": "#/components/schemas/Pagination"
          }
        }
      },
      "HateoasCollectionOfApplicationCompatibility": {
        "allOf": [
          {
            "$ref": "#/components/schemas/FilteredResponseOfApplicationCompatibility"
          },
          {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "_links": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/Link"
                }
              }
            }
          }
        ]
      },
      "Compatibility": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "id": {
            "type": "string",
            "format": "guid"
          },
          "sortOrder": {
            "type": "integer",
            "format": "int32"
          }
        }
      },
      "MetricSetting": {
        "type": "string",
        "description": "",
        "x-enumNames": [
          "None",
          "UsersWithUsage",
          "PrimaryUsers",
          "UsersWithAccess",
          "DevicesWithUsage",
          "AllDevices"
        ],
        "enum": [
          "None",
          "UsersWithUsage",
          "PrimaryUsers",
          "UsersWithAccess",
          "DevicesWithUsage",
          "AllDevices"
        ]
      },
      "MetricSettingIntervalType": {
        "type": "string",
        "description": "",
        "x-enumNames": [
          "Continuous",
          "PeriodIncludingCurrentMonth",
          "PeriodExcludingCurrentMonth",
          "None"
        ],
        "enum": [
          "Continuous",
          "PeriodIncludingCurrentMonth",
          "PeriodExcludingCurrentMonth",
          "None"
        ]
      },
      "MetricData": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "id": {
            "type": "string",
            "format": "guid"
          },
          "isDefault": {
            "type": "boolean"
          },
          "metricSetting": {
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/MetricSetting"
              }
            ]
          },
          "metricSettingIntervalType": {
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/MetricSettingIntervalType"
              }
            ]
          },
          "metricSettingInterval": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "minimumRequirement": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "licenseCost": {
            "type": "number",
            "format": "decimal",
            "nullable": true
          },
          "licenseCostCurrency": {
            "type": "string"
          },
          "customCompareValueTypeId": {
            "type": "string",
            "format": "guid",
            "nullable": true
          }
        }
      },
      "UpdateApplication": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "description": {
            "type": "string",
            "nullable": true
          },
          "serialNumbersLicenseKeys": {
            "type": "string",
            "nullable": true
          },
          "media": {
            "type": "string",
            "nullable": true
          },
          "systemOwner": {
            "type": "string",
            "nullable": true
          },
          "systemOwnerEmail": {
            "type": "string",
            "nullable": true
          },
          "systemOwnerPhone": {
            "type": "string",
            "nullable": true
          },
          "applicationUrl": {
            "type": "string",
            "nullable": true
          },
          "privacyPolicyUrl": {
            "type": "string",
            "nullable": true
          },
          "termsAndConditionsUrl": {
            "type": "string",
            "nullable": true
          },
          "alertNotUsed": {
            "type": "boolean",
            "nullable": true
          },
          "alertOverlicensing": {
            "type": "boolean",
            "nullable": true
          },
          "alertUnderlicensing": {
            "type": "boolean",
            "nullable": true
          },
          "isApplyMetricsToUpgradeDowngradePathAllowed": {
            "type": "boolean",
            "nullable": true
          },
          "isApplyMetricsToCrossEditionPathAllowed": {
            "type": "boolean",
            "nullable": true
          },
          "isSimultaneousMultipleEditionsAllowed": {
            "type": "boolean",
            "nullable": true
          },
          "isSimultaneousMultipleVersionsAllowed": {
            "type": "boolean",
            "nullable": true
          },
          "isSecondaryUseRightsEnabled": {
            "type": "boolean",
            "nullable": true
          },
          "isNoLicenseRequired": {
            "type": "boolean",
            "nullable": true
          },
          "releaseDate": {
            "type": "string",
            "nullable": true
          },
          "endOfLifeDate": {
            "type": "string",
            "nullable": true
          },
          "endOfSupportDate": {
            "type": "string",
            "nullable": true
          },
          "endOfExtendedSupportDate": {
            "type": "string",
            "nullable": true
          },
          "downgradeInstance": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "applicationCompatability": {
            "type": "array",
            "nullable": true,
            "items": {
              "$ref": "#/components/schemas/Compatibility"
            }
          },
          "metrics": {
            "type": "array",
            "nullable": true,
            "items": {
              "$ref": "#/components/schemas/MetricData"
            }
          }
        }
      },
      "DeniedApplicationIdentifier": {
        "allOf": [
          {
            "$ref": "#/components/schemas/HateoasResource"
          },
          {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "applicationId": {
                "type": "string",
                "format": "guid"
              }
            }
          }
        ]
      },
      "FilteredResponseOfDeniedApplicationIdentifier": {
        "type": "object",
        "additionalProperties": false,
        "required": [
          "items",
          "pagination"
        ],
        "properties": {
          "items": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/DeniedApplicationIdentifier"
            }
          },
          "pagination": {
            "$ref": "#/components/schemas/Pagination"
          }
        }
      },
      "HateoasCollectionOfDeniedApplicationIdentifier": {
        "allOf": [
          {
            "$ref": "#/components/schemas/FilteredResponseOfDeniedApplicationIdentifier"
          },
          {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "_links": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/Link"
                }
              }
            }
          }
        ]
      },
      "ApplicationFamily": {
        "allOf": [
          {
            "$ref": "#/components/schemas/HateoasResource"
          },
          {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "id": {
                "type": "string",
                "format": "guid"
              },
              "manufacturer": {
                "type": "string"
              },
              "name": {
                "type": "string"
              },
              "description": {
                "type": "string",
                "nullable": true
              }
            }
          }
        ]
      },
      "FilteredResponseOfApplicationFamily": {
        "type": "object",
        "additionalProperties": false,
        "required": [
          "items",
          "pagination"
        ],
        "properties": {
          "items": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ApplicationFamily"
            }
          },
          "pagination": {
            "$ref": "#/components/schemas/Pagination"
          }
        }
      },
      "HateoasCollectionOfApplicationFamily": {
        "allOf": [
          {
            "$ref": "#/components/schemas/FilteredResponseOfApplicationFamily"
          },
          {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "_links": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/Link"
                }
              }
            }
          }
        ]
      },
      "ApplicationGroup": {
        "allOf": [
          {
            "$ref": "#/components/schemas/HateoasResource"
          },
          {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "id": {
                "type": "string",
                "format": "guid"
              },
              "childId": {
                "type": "string",
                "format": "guid"
              },
              "childName": {
                "type": "string"
              }
            }
          }
        ]
      },
      "FilteredResponseOfApplicationGroup": {
        "type": "object",
        "additionalProperties": false,
        "required": [
          "items",
          "pagination"
        ],
        "properties": {
          "items": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ApplicationGroup"
            }
          },
          "pagination": {
            "$ref": "#/components/schemas/Pagination"
          }
        }
      },
      "HateoasCollectionOfApplicationGroup": {
        "allOf": [
          {
            "$ref": "#/components/schemas/FilteredResponseOfApplicationGroup"
          },
          {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "_links": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/Link"
                }
              }
            }
          }
        ]
      },
      "MetadataApplicationIdentifier": {
        "allOf": [
          {
            "$ref": "#/components/schemas/HateoasResource"
          },
          {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "applicationId": {
                "type": "string",
                "format": "guid"
              }
            }
          }
        ]
      },
      "FilteredResponseOfMetadataApplicationIdentifier": {
        "type": "object",
        "additionalProperties": false,
        "required": [
          "items",
          "pagination"
        ],
        "properties": {
          "items": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/MetadataApplicationIdentifier"
            }
          },
          "pagination": {
            "$ref": "#/components/schemas/Pagination"
          }
        }
      },
      "HateoasCollectionOfMetadataApplicationIdentifier": {
        "allOf": [
          {
            "$ref": "#/components/schemas/FilteredResponseOfMetadataApplicationIdentifier"
          },
          {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "_links": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/Link"
                }
              }
            }
          }
        ]
      },
      "Metric": {
        "allOf": [
          {
            "$ref": "#/components/schemas/HateoasResource"
          },
          {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "id": {
                "type": "string",
                "format": "guid"
              },
              "name": {
                "type": "string"
              },
              "isDefault": {
                "type": "boolean"
              },
              "minimumRequirement": {
                "type": "integer",
                "format": "int32",
                "nullable": true
              },
              "metricSetting": {
                "nullable": true,
                "oneOf": [
                  {
                    "$ref": "#/components/schemas/MetricSetting"
                  }
                ]
              },
              "metricSettingIntervalType": {
                "nullable": true,
                "oneOf": [
                  {
                    "$ref": "#/components/schemas/MetricSettingIntervalType"
                  }
                ]
              },
              "metricSettingInterval": {
                "type": "integer",
                "format": "int32",
                "nullable": true
              },
              "customCompareValueType": {
                "type": "string"
              },
              "customCompareValueTypeId": {
                "type": "string",
                "format": "guid",
                "nullable": true
              },
              "concurrencyInterval": {
                "type": "integer",
                "format": "int32",
                "nullable": true
              },
              "licenseCost": {
                "type": "number",
                "format": "decimal",
                "nullable": true
              },
              "licenseCostCurrency": {
                "type": "string"
              },
              "licenseCostBase": {
                "type": "number",
                "format": "decimal",
                "nullable": true
              }
            }
          }
        ]
      },
      "FilteredResponseOfMetric": {
        "type": "object",
        "additionalProperties": false,
        "required": [
          "items",
          "pagination"
        ],
        "properties": {
          "items": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Metric"
            }
          },
          "pagination": {
            "$ref": "#/components/schemas/Pagination"
          }
        }
      },
      "HateoasCollectionOfMetric": {
        "allOf": [
          {
            "$ref": "#/components/schemas/FilteredResponseOfMetric"
          },
          {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "_links": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/Link"
                }
              }
            }
          }
        ]
      },
      "StockKeepingUnit": {
        "allOf": [
          {
            "$ref": "#/components/schemas/HateoasResource"
          },
          {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "id": {
                "type": "string",
                "format": "guid"
              },
              "sku": {
                "type": "string"
              },
              "productName": {
                "type": "string"
              },
              "metricId": {
                "type": "string",
                "format": "guid"
              },
              "assignmentTypeId": {
                "type": "string",
                "format": "guid"
              },
              "language": {
                "type": "string"
              },
              "channel": {
                "type": "string"
              },
              "isLicense": {
                "type": "boolean"
              },
              "isMedia": {
                "type": "boolean"
              },
              "isUpgrade": {
                "type": "boolean"
              },
              "hasUpgradeRights": {
                "type": "boolean"
              },
              "hasDowngradeRights": {
                "type": "boolean"
              },
              "hasCrossEditionRights": {
                "type": "boolean"
              },
              "hasCrossPlatformRights": {
                "type": "boolean"
              },
              "hasVmUseRights": {
                "type": "boolean"
              },
              "vmUseRightAssignmentLimitation": {
                "type": "integer",
                "format": "int32",
                "nullable": true
              },
              "quantity": {
                "type": "integer",
                "format": "int32",
                "nullable": true
              },
              "isTrusted": {
                "type": "boolean"
              },
              "isLicenseBundle": {
                "type": "boolean",
                "nullable": true
              },
              "updatedDate": {
                "type": "string",
                "format": "date-time",
                "nullable": true
              }
            }
          }
        ]
      },
      "FilteredResponseOfStockKeepingUnit": {
        "type": "object",
        "additionalProperties": false,
        "required": [
          "items",
          "pagination"
        ],
        "properties": {
          "items": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/StockKeepingUnit"
            }
          },
          "pagination": {
            "$ref": "#/components/schemas/Pagination"
          }
        }
      },
      "HateoasCollectionOfStockKeepingUnit": {
        "allOf": [
          {
            "$ref": "#/components/schemas/FilteredResponseOfStockKeepingUnit"
          },
          {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "_links": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/Link"
                }
              }
            }
          }
        ]
      },
      "SkuApplication": {
        "allOf": [
          {
            "$ref": "#/components/schemas/HateoasResource"
          },
          {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "skuId": {
                "type": "string",
                "format": "guid"
              },
              "applicationId": {
                "type": "string",
                "format": "guid"
              }
            }
          }
        ]
      },
      "FilteredResponseOfSkuApplication": {
        "type": "object",
        "additionalProperties": false,
        "required": [
          "items",
          "pagination"
        ],
        "properties": {
          "items": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/SkuApplication"
            }
          },
          "pagination": {
            "$ref": "#/components/schemas/Pagination"
          }
        }
      },
      "HateoasCollectionOfSkuApplication": {
        "allOf": [
          {
            "$ref": "#/components/schemas/FilteredResponseOfSkuApplication"
          },
          {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "_links": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/Link"
                }
              }
            }
          }
        ]
      },
      "ApplicationStore": {
        "allOf": [
          {
            "$ref": "#/components/schemas/HateoasResource"
          },
          {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "applicationId": {
                "type": "string",
                "format": "guid"
              },
              "name": {
                "type": "string"
              },
              "description": {
                "type": "string"
              },
              "purchasePriceBase": {
                "type": "number",
                "format": "decimal",
                "nullable": true
              },
              "rentalPriceBase": {
                "type": "number",
                "format": "decimal",
                "nullable": true
              },
              "rentalPaymentPeriod": {
                "type": "integer",
                "format": "int32",
                "nullable": true
              },
              "imageName": {
                "type": "string"
              },
              "isOrganizationalApprovalRequired": {
                "type": "boolean"
              },
              "isApplicationOwnerApprovalRequired": {
                "type": "boolean"
              },
              "applicationOwnerUsername": {
                "type": "string"
              },
              "isSecondApprovalRequired": {
                "type": "boolean"
              },
              "secondApprovalUsername": {
                "type": "string"
              },
              "isThirdApprovalRequired": {
                "type": "boolean"
              },
              "thirdApprovalUsername": {
                "type": "string"
              },
              "provisioningGroupType": {
                "type": "integer",
                "format": "int32"
              },
              "provisioningGroupOU": {
                "type": "string"
              },
              "computerGroupName": {
                "type": "string"
              },
              "userGroupName": {
                "type": "string"
              },
              "status": {
                "type": "integer",
                "format": "int32",
                "nullable": true
              },
              "publishLevel": {
                "type": "integer",
                "format": "int32"
              },
              "uninstallOption": {
                "type": "integer",
                "format": "int32"
              },
              "daysUntilUninstall": {
                "type": "integer",
                "format": "int32",
                "nullable": true
              },
              "daysUntilUninstallNotification": {
                "type": "integer",
                "format": "int32",
                "nullable": true
              },
              "subscriptionExtensionsDays": {
                "type": "integer",
                "format": "int32",
                "nullable": true
              },
              "isUserUninstallApprovalRequired": {
                "type": "boolean"
              }
            }
          }
        ]
      },
      "ApplicationsUsingCustomMetricRequest": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "customMetricIds": {
            "type": "array",
            "items": {
              "type": "string",
              "format": "guid"
            }
          }
        }
      },
      "ApplicationsCustomMetric": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "customMetricId": {
            "type": "string",
            "format": "guid"
          },
          "applicationId": {
            "type": "string",
            "format": "guid"
          },
          "applicationName": {
            "type": "string",
            "nullable": true
          }
        }
      },
      "FilteredResponseOfApplicationsCustomMetric": {
        "type": "object",
        "additionalProperties": false,
        "required": [
          "items",
          "pagination"
        ],
        "properties": {
          "items": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ApplicationsCustomMetric"
            }
          },
          "pagination": {
            "$ref": "#/components/schemas/Pagination"
          }
        }
      },
      "HateoasCollectionOfApplicationsCustomMetric": {
        "allOf": [
          {
            "$ref": "#/components/schemas/FilteredResponseOfApplicationsCustomMetric"
          },
          {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "_links": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/Link"
                }
              }
            }
          }
        ]
      },
      "ApplicationType": {
        "allOf": [
          {
            "$ref": "#/components/schemas/HateoasResource"
          },
          {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "id": {
                "type": "string",
                "format": "guid"
              },
              "parentId": {
                "type": "string",
                "format": "guid",
                "nullable": true
              },
              "name": {
                "type": "string"
              },
              "updatedDate": {
                "type": "string",
                "format": "date-time"
              }
            }
          }
        ]
      },
      "FilteredResponseOfApplicationType": {
        "type": "object",
        "additionalProperties": false,
        "required": [
          "items",
          "pagination"
        ],
        "properties": {
          "items": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ApplicationType"
            }
          },
          "pagination": {
            "$ref": "#/components/schemas/Pagination"
          }
        }
      },
      "HateoasCollectionOfApplicationType": {
        "allOf": [
          {
            "$ref": "#/components/schemas/FilteredResponseOfApplicationType"
          },
          {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "_links": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/Link"
                }
              }
            }
          }
        ]
      },
      "Bundle": {
        "allOf": [
          {
            "$ref": "#/components/schemas/HateoasResource"
          },
          {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "id": {
                "type": "string",
                "format": "guid"
              },
              "childId": {
                "type": "string",
                "format": "guid"
              },
              "isMandatory": {
                "type": "boolean"
              },
              "isOptionalComponentRequired": {
                "type": "boolean"
              }
            }
          }
        ]
      },
      "FilteredResponseOfBundle": {
        "type": "object",
        "additionalProperties": false,
        "required": [
          "items",
          "pagination"
        ],
        "properties": {
          "items": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Bundle"
            }
          },
          "pagination": {
            "$ref": "#/components/schemas/Pagination"
          }
        }
      },
      "HateoasCollectionOfBundle": {
        "allOf": [
          {
            "$ref": "#/components/schemas/FilteredResponseOfBundle"
          },
          {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "_links": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/Link"
                }
              }
            }
          }
        ]
      },
      "PlatformType2": {
        "allOf": [
          {
            "$ref": "#/components/schemas/HateoasResource"
          },
          {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "name": {
                "type": "string"
              }
            }
          }
        ]
      },
      "FilteredResponseOfPlatformType": {
        "type": "object",
        "additionalProperties": false,
        "required": [
          "items",
          "pagination"
        ],
        "properties": {
          "items": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/PlatformType2"
            }
          },
          "pagination": {
            "$ref": "#/components/schemas/Pagination"
          }
        }
      },
      "HateoasCollectionOfPlatformType": {
        "allOf": [
          {
            "$ref": "#/components/schemas/FilteredResponseOfPlatformType"
          },
          {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "_links": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/Link"
                }
              }
            }
          }
        ]
      }
    },
    "securitySchemes": {
      "BearerAuth": {
        "type": "http",
        "scheme": "bearer",
        "bearerFormat": "JWT"
      }
    }
  }
}
