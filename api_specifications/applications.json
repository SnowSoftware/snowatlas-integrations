{
  "openapi": "3.0.0",
  "info": {
    "title": "SAM: Applications",
    "description": "API for interacting with applications.",
    "version": "1.0.0",
    "contact": {
      "name": "Snow Software, Inc.",
      "url": "https://www.snowsoftware.com"
}
  },
  "servers": [
    {
        "url": "https://{region}.snowsoftware.io",
        "variables": {
            "region": {
                "enum": [
                    "westeurope",
                    "australiasoutheast",
                    "eastus2",
                    "uksouth"
                ],
                "default": "westeurope"
            }
        }
    }
  ],
  "paths": {
    "/api/sam/software-registry/v1/applications": {
      "get": {
        "description": "Returns a collection of registry applications.",
        "summary": "Get registry applications",
        "operationId": "applications",
        "parameters": [
          {
            "name": "page_size",
            "in": "query",
            "description": "The maximum number of items in the response.",
            "schema": {
              "type": "integer",
              "default": 100
            }
          },
          {
            "name": "page_number",
            "in": "query",
            "description": "The page number.",
            "schema": {
              "type": "integer",
              "default": 1
            }
          },
          {
            "name": "filter",
            "in": "query",
            "description": "For more information on the available operators and which data types those operators work on, see [Filter API call results](https://docs.snowsoftware.io/snow-atlas-api/resources/get-started-with-apis/api-conventions#filter-api-call-results).",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK: Your request succeeded.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HateoasCollectionOfApplicationCollection"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request: Your request is invalid or improperly formed. Consequently, the API server could not understand your request.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                  }
                }
            }
          },
          "500": {
            "description": "Internal Server Error: Your request failed due to an internal error.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                  }
              }
            }
          }
        },
        "security": [
          {
            "BearerAuth": [
              "sam.application.r"
            ]
          }
        ]
      }
    },
    "/api/sam/software-registry/v1/applications/{id}": {
      "get": {
        "description": "Returns the details of a registry application.",
        "summary": "Get registry application",
        "operationId": "applications2",
        "parameters": [
          {
            "name": "id",
            "description": "The unique ID of the application.",
            "example": "5be51be2-35ff-48f2-9214-00002248b242",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK: Your request succeeded.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Application"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request: Your request is invalid or improperly formed. Consequently, the API server could not understand your request.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Not Found: The operation you requested failed because a resource associated with your request could not be found.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error: Your request failed due to an internal error.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "BearerAuth": [
              "sam.application.r"
            ]
          }
        ]
      }
    },
    "/api/sam/software-registry/v1/article-numbers": {
      "get": {
        "description": "Returns a collection of application article numbers.",
        "summary": "Get article numbers",
        "operationId": "article-numbers",
        "parameters": [
          {
            "name": "page_size",
            "in": "query",
            "description": "The maximum number of items in the response.",
            "schema": {
              "type": "integer",
              "default": 100
            }
          },
          {
            "name": "page_number",
            "in": "query",
            "description": "The page number.",
            "schema": {
              "type": "integer",
              "default": 1
            }
          },
          {
            "name": "filter",
            "in": "query",
            "description": "For more information on the available operators and which data types those operators work on, see [Filter API call results](https://docs.snowsoftware.io/snow-atlas-api/resources/get-started-with-apis/api-conventions#filter-api-call-results).",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK: Your request succeeded.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HateoasCollectionOfApplicationArticleNumber"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request: Your request is invalid or improperly formed. Consequently, the API server could not understand your request.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error: Your request failed due to an internal error.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "BearerAuth": [
              "sam.application.r"
            ]
          }
        ]
      }
    },
    "/api/sam/software-registry/v1/article-numbers/{id}": {
      "get": {
        "description": "Returns the details of a given application article number.",
        "summary": "Get article number",
        "operationId": "article-numbers2",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The unique ID of the application article number for which details will be returned.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK: Your request succeeded.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApplicationArticleNumber"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request: Your request is invalid or improperly formed. Consequently, the API server could not understand your request.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Not Found: The operation you requested failed because a resource associated with your request could not be found.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error: Your request failed due to an internal error.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "BearerAuth": [
              "sam.application.r"
            ]
          }
        ]
      }
    },
    "/api/sam/software-registry/v1/applications/{id}/compatibility": {
      "get": {
        "description": "Returns a collection of applications that are compatible with a given application.",
        "summary": "Get compatible applications",
        "operationId": "compatibility",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The unique ID of the compatible application.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "page_size",
            "in": "query",
            "description": "The maximum number of items in the response.",
            "schema": {
              "type": "integer",
              "default": 100
            }
          },
          {
            "name": "page_number",
            "in": "query",
            "description": "The page number.",
            "schema": {
              "type": "integer",
              "default": 1
            }
          },
          {
            "name": "filter",
            "in": "query",
            "description": "For more information on the available operators and which data types those operators work on, see [Filter API call results](https://docs.snowsoftware.io/snow-atlas-api/resources/get-started-with-apis/api-conventions#filter-api-call-results).",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK: Your request succeeded.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HateoasCollectionOfApplicationCompatibility"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request: Your request is invalid or improperly formed. Consequently, the API server could not understand your request.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error: Your request failed due to an internal error.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "BearerAuth": [
              "sam.application.r"
            ]
          }
        ]
      }
    },
    "/api/sam/software-registry/v1/applications/{id}/compatibility/{compatibilityId}": {
      "get": {
        "description": "Returns the details of a compatible application.",
        "summary": "Get compatible application",
        "operationId": "compatibility2",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The unique ID of the application.",
            "example": "5be51be2-35ff-48f2-9214-00002248b242",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "compatibilityId",
            "in": "path",
            "description": "The unique ID of the compatible application.",
            "example": "",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK: Your request succeeded.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApplicationCompatibility"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request: Your request is invalid or improperly formed. Consequently, the API server could not understand your request.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Not Found: The operation you requested failed because a resource associated with your request could not be found.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error: Your request failed due to an internal error.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "BearerAuth": [
              "sam.application.r"
            ]
          }
        ]
      }
    },
    "/api/sam/software-registry/v1/families": {
      "get": {
        "description": "Returns a collection of applications families.",
        "summary": "Get families",
        "operationId": "families",
        "parameters": [
          {
            "name": "page_size",
            "in": "query",
            "description": "The maximum number of items in the response.",
            "schema": {
              "type": "integer",
              "default": 100
            }
          },
          {
            "name": "page_number",
            "in": "query",
            "description": "The page number.",
            "schema": {
              "type": "integer",
              "default": 1
            }
          },
          {
            "name": "filter",
            "in": "query",
            "description": "For more information on the available operators and which data types those operators work on, see [Filter API call results](https://docs.snowsoftware.io/snow-atlas-api/resources/get-started-with-apis/api-conventions#filter-api-call-results).",
            "schema": {
              "type": "string",
              "example": ""
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK: Your request succeeded.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HateoasCollectionOfApplicationFamily"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request: Your request is invalid or improperly formed. Consequently, the API server could not understand your request.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error: Your request failed due to an internal error.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "BearerAuth": [
              "sam.application.r"
            ]
          }
        ]
      }
    },
    "/api/sam/software-registry/v1/families/{id}": {
      "get": {
        "description": "Returns the details of a given applications family.",
        "summary": "Get family",
        "operationId": "families2",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The unique ID of the applications family.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK: Your request succeeded.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApplicationFamily"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request: Your request is invalid or improperly formed. Consequently, the API server could not understand your request.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Not Found: The operation you requested failed because a resource associated with your request could not be found.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error: Your request failed due to an internal error.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "BearerAuth": [
              "sam.application.r"
            ]
          }
        ]
      }
    },
    "/api/sam/software-registry/v1/applications/{id}/group": {
      "get": {
        "description": "Returns a collection of application groups for a given application.",
        "summary": "Get groups",
        "operationId": "group",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The unique ID of the application.",
            "example": "5be51be2-35ff-48f2-9214-00002248b242",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "page_size",
            "in": "query",
            "description": "The maximum number of items in the response.",
            "schema": {
              "type": "integer",
              "default": 100
            }
          },
          {
            "name": "page_number",
            "in": "query",
            "description": "The page number.",
            "schema": {
              "type": "integer",
              "default": 1
            }
          },
          {
            "name": "filter",
            "in": "query",
            "description": "For more information on the available operators and which data types those operators work on, see [Filter API call results](https://docs.snowsoftware.io/snow-atlas-api/resources/get-started-with-apis/api-conventions#filter-api-call-results).",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK: Your request succeeded.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HateoasCollectionOfApplicationGroup"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request: Your request is invalid or improperly formed. Consequently, the API server could not understand your request.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Not Found: The operation you requested failed because a resource associated with your request could not be found.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error: Your request failed due to an internal error.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "BearerAuth": [
              "sam.application.r"
            ]
          }
        ]
      }
    },
    "/api/sam/software-registry/v1/applications/{id}/metrics": {
      "get": {
        "description": "Returns a collection of application metrics for a given application.",
        "summary": "Get metrics",
        "operationId": "metrics",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The unique ID of the application.",
            "example": "5be51be2-35ff-48f2-9214-00002248b242",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "page_size",
            "in": "query",
            "description": "The maximum number of items in the response.",
            "schema": {
              "type": "integer",
              "default": 100
            }
          },
          {
            "name": "page_number",
            "in": "query",
            "description": "The page number.",
            "schema": {
              "type": "integer",
              "default": 1
            }
          },
          {
            "name": "filter",
            "in": "query",
            "description": "For more information on the available operators and which data types those operators work on, see [Filter API call results](https://docs.snowsoftware.io/snow-atlas-api/resources/get-started-with-apis/api-conventions#filter-api-call-results).",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK: Your request succeeded.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HateoasCollectionOfMetric"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request: Your request is invalid or improperly formed. Consequently, the API server could not understand your request.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error: Your request failed due to an internal error.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "BearerAuth": [
              "sam.application.r"
            ]
          }
        ]
      }
    },
    "/api/sam/software-registry/v1/applications/{id}/metrics/{metricId}": {
      "get": {
        "description": "Returns the details of an application metric.",
        "summary": "Get metric",
        "operationId": "metrics2",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The unique ID of the application.",
            "example": "5be51be2-35ff-48f2-9214-00002248b242",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "metricId",
            "in": "path",
            "description": "The unique ID of the application metric.",
            "example": "",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK: Your request succeeded.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Metric"
                }
              }
            }
          },
          "404": {
            "description": "Not Found: The operation you requested failed because a resource associated with your request could not be found.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error: Your request failed due to an internal error.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request: Your request is invalid or improperly formed. Consequently, the API server could not understand your request.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "BearerAuth": [
              "sam.application.r"
            ]
          }
        ]
      }
    },
    "/api/sam/software-registry/v1/applications/{id}/store": {
      "get": {
        "description": "Returns the details of an application store for a given application.",
        "summary": "Get store",
        "operationId": "store",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The unique ID of the application.",
            "example": "5be51be2-35ff-48f2-9214-00002248b242",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK: Your request succeeded.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApplicationStore"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request: Your request is invalid or improperly formed. Consequently, the API server could not understand your request.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Not Found: The operation you requested failed because a resource associated with your request could not be found.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error: Your request failed due to an internal error.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "BearerAuth": [
              "sam.application.r"
            ]
          }
        ]
      }
    },
    "/api/sam/software-registry/v1/types": {
      "get": {
        "description": "Returns a collection of application types.",
        "summary": "Get applications types",
        "operationId": "types",
        "parameters": [
          {
            "name": "page_size",
            "in": "query",
            "description": "The maximum number of items in the response.",
            "schema": {
              "type": "integer",
              "default": 100
            }
          },
          {
            "name": "page_number",
            "in": "query",
            "description": "The page number.",
            "schema": {
              "type": "integer",
              "default": 1
            }
          },
          {
            "name": "filter",
            "in": "query",
            "description": "For more information on the available operators and which data types those operators work on, see [Filter API call results](https://docs.snowsoftware.io/snow-atlas-api/resources/get-started-with-apis/api-conventions#filter-api-call-results).",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK: Your request succeeded.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HateoasCollectionOfApplicationType"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request: Your request is invalid or improperly formed. Consequently, the API server could not understand your request.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error: Your request failed due to an internal error.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "BearerAuth": [
              "sam.application.r"
            ]
          }
        ]
      }
    },
    "/api/sam/software-registry/v1/applications/{id}/types": {
      "get": {
        "description": "Returns a collection of application types for a given application.",
        "summary": "Get application types",
        "operationId": "types2",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The unique ID of the application.",
            "example": "5be51be2-35ff-48f2-9214-00002248b242",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "page_size",
            "in": "query",
            "description": "The maximum number of items in the response.",
            "schema": {
              "type": "integer",
              "default": 100
            }
          },
          {
            "name": "page_number",
            "in": "query",
            "description": "The page number.",
            "schema": {
              "type": "integer",
              "default": 1
            }
          },
          {
            "name": "filter",
            "in": "query",
            "description": "For more information on the available operators and which data types those operators work on, see [Filter API call results](https://docs.snowsoftware.io/snow-atlas-api/resources/get-started-with-apis/api-conventions#filter-api-call-results).",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK: Your request succeeded.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HateoasCollectionOfApplicationType"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request: Your request is invalid or improperly formed. Consequently, the API server could not understand your request.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Not Found: The operation you requested failed because a resource associated with your request could not be found.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error: Your request failed due to an internal error.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "BearerAuth": [
              "sam.application.r"
            ]
          }
        ]
      }
    },
    "/api/sam/software-registry/v1/types/{id}": {
      "get": {
        "description": "Returns the details of a given application type.",
        "summary": "Get application type",
        "operationId": "types3",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The unique ID of the application type.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK: Your request succeeded.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApplicationType"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request: Your request is invalid or improperly formed. Consequently, the API server could not understand your request.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Not Found: The operation you requested failed because a resource associated with your request could not be found.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error: Your request failed due to an internal error.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "BearerAuth": [
              "sam.application.r"
            ]
          }
        ]
      }
    },
    "/api/sam/software-registry/v1/applications/{id}/bundle": {
      "get": {
        "description": "Returns a collection of application bundles, or product suites, for a given application.",
        "summary": "Get bundles",
        "operationId": "bundle2",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The unique ID of the application.",
            "example": "5be51be2-35ff-48f2-9214-00002248b242",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "page_size",
            "in": "query",
            "description": "The maximum number of items in the response.",
            "schema": {
              "type": "integer",
              "default": 100
            }
          },
          {
            "name": "page_number",
            "in": "query",
            "description": "The page number.",
            "schema": {
              "type": "integer",
              "default": 1
            }
          },
          {
            "name": "filter",
            "in": "query",
            "description": "For more information on the available operators and which data types those operators work on, see [Filter API call results](https://docs.snowsoftware.io/snow-atlas-api/resources/get-started-with-apis/api-conventions#filter-api-call-results).",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK: Your request succeeded.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HateoasCollectionOfBundle"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request: Your request is invalid or improperly formed. Consequently, the API server could not understand your request.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Not Found: The operation you requested failed because a resource associated with your request could not be found.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error: Your request failed due to an internal error.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "BearerAuth": [
              "sam.application.r"
            ]
          }
        ]
      }
    },
    "/api/sam/software-registry/v1/applications/{id}/bundle/{childId}": {
      "get": {
        "description": "Returns the details of a given application bundle, or product suite, for a given application.",
        "summary": "Get bundle",
        "operationId": "bundle",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The unique ID of the application.",
            "example": "5be51be2-35ff-48f2-9214-00002248b242",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "childId",
            "in": "path",
            "description": "The unique ID of the child application in the bundle or product suite for the application.",
            "example": "",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK: Your request succeeded.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Bundle"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request: Your request is invalid or improperly formed. Consequently, the API server could not understand your request.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Not Found: The operation you requested failed because a resource associated with your request could not be found.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error: Your request failed due to an internal error.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "BearerAuth": [
              "sam.application.r"
            ]
          }
        ]
      }
    },
    "/api/sam/software-registry/v1/platforms": {
      "get": {
        "description": "Returns a collection of application platforms.",
        "summary": "Get platforms",
        "operationId": "platforms",
        "parameters": [
          {
            "name": "page_size",
            "in": "query",
            "description": "The maximum number of items in the response.",
            "schema": {
              "type": "integer",
              "default": 100
            }
          },
          {
            "name": "page_number",
            "in": "query",
            "description": "The page number.",
            "schema": {
              "type": "integer",
              "default": 1
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK: Your request succeeded.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HateoasCollectionOfPlatformType"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request: Your request is invalid or improperly formed. Consequently, the API server could not understand your request.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error: Your request failed due to an internal error.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "BearerAuth": [
              "sam.application.r"
            ]
          }
        ]
      }
    }
  },
  "components": {
    "schemas": {
      "Pagination": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "page_size": {
            "type": "integer",
            "description": "The page size you requested.",
            "default": 100,
            "format": "int32",
            "example": 100
          },
          "page_number": {
            "type": "integer",
            "description": "The page number you requested.",
            "default": 1,
            "format": "int32",
            "example": 1
          },
          "total_pages": {
            "type": "integer",
            "description": "The total number of pages.",
            "format": "int32",
            "example": 751,
            "nullable": true
          }
        }
      },
      "Link": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "href": {
            "description": "The associated relative URL.",
            "type": "string",
            "example": "api/sam/software-registry/v1/...",
            "nullable": true
          },
          "rel": {
            "description": "Specifies the relationship between the current document and the linked document/resource.",
            "type": "string",
            "example": "self",
            "nullable": true
          },
          "method": {
            "description": "The method to access related resources.",
            "type": "string",
            "example": "GET",
            "nullable": true
          }
        }
      },
      "ArticleNumberType": {
        "type": "string",
        "description": "The type of the article number.",
        "x-enumNames": [
          "Reseller",
          "Manufacturer",
          "SKU"
        ],
        "enum": [
          "Reseller",
          "Manufacturer",
          "SKU"
        ]
      },
      "HateoasResource": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "_links": {
            "description": "A collection of links to related resources.",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Link"
            }
          }
        }
      },
      "ApplicationArticleNumber": {
        "allOf": [
          {
            "$ref": "#/components/schemas/HateoasResource"
          },
          {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "id": {
                "description": "The unique ID of the article number.",
                "example": "aedf5fac-b720-4a0f-a052-e38537a87cfb",
                "type": "string",
                "format": "guid"
              },
              "applicationId": {
                "description": "The unique ID of the application.",
                "example": "5be51be2-35ff-48f2-9214-00002248b242",
                "type": "string",
                "format": "guid"
              },
              "type": {
                "$ref": "#/components/schemas/ArticleNumberType"
              },
              "articleNumber": {
                "description": "The article number.",
                "example": "Article Number 1",
                "type": "string"
              }
            }
          }
        ]
      },
      "FilteredResponseOfApplicationArticleNumber": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "pagination": {
            "description": "The pagination details.",
            "oneOf": [
              {
                "$ref": "#/components/schemas/Pagination"
              }
            ]
          },
          "items": {
            "type": "array",
            
            "items": {
              "$ref": "#/components/schemas/ApplicationArticleNumber"
            }
          }
        }
      },
      "HateoasCollectionOfApplicationArticleNumber": {
        "allOf": [
          {
            "$ref": "#/components/schemas/FilteredResponseOfApplicationArticleNumber"
          },
          {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "_links": {
                "description": "A collection of links to related resources.",
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/Link"
                }
              }
            }
          }
        ]
      },
      "ErrorContent": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "code": {
            "type": "integer",
            "description": "The HTTP status code.",
            "format": "int32"
          },
          "message": {
            "type": "string",
            "description": "The error message.",
            "nullable": true
          }
        }
      },
      "ErrorResponse": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "error": {
            "description": "The error details.",
            "oneOf": [
              {
                "$ref": "#/components/schemas/ErrorContent"
              }
            ]
          }
        }
      },
      "PlatformType": {
        "type": "string",
        "description": "The platform type.",
        "x-enumNames": [
          "Windows",
          "MacOSX",
          "Linux",
          "HPUX",
          "Solaris",
          "Aix",
          "WMware",
          "Citrix",
          "iOS",
          "Android",
          "ChromeOS",
          "WindowsPhone",
          "Symbian",
          "Blackberry",
          "Mainframe",
          "CrossPlatform",
          "None"
        ],
        "enum": [
          "Windows",
          "MacOSX",
          "Linux",
          "HPUX",
          "Solaris",
          "Aix",
          "WMware",
          "Citrix",
          "iOS",
          "Android",
          "ChromeOS",
          "WindowsPhone",
          "Symbian",
          "Blackberry",
          "Mainframe",
          "CrossPlatform",
          "None"
        ]
      },
      "ApplicationMetric": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "id": {
            "description": "The unique ID of the metric.",
            "example": "5891a1d8-7fb0-45bd-b1f6-01c943f9c572",
            "type": "string",
            "format": "guid"
          },
          "name": {
            "description": "The name of the metric.",
            "example": "Installations",
            "type": "string"
          },
          "isDefault": {
            "description": "```true``` if the metric is the default for the application; otherwise, ```false```.",
            "type": "boolean"
          }
        }
      },
      "ApplicationCollection": {
        "allOf": [
          {
            "$ref": "#/components/schemas/HateoasResource"
          },
          {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "editionIndex": {
                "description": "The edition index of the application.",
                "example": 100,
                "type": "integer",
                "format": "int32"
              },
              "familyId": {
                "description": "The unique ID of the application family.",
                "example": "8496c20f-f639-4047-a4c0-b2f698e7442f",
                "type": "string",
                "format": "guid",
                "nullable": true
              },
              "id": {
                "description": "The unique ID of the application.",
                "example": "5be51be2-35ff-48f2-9214-00002248b242",
                "type": "string",
                "format": "guid"
              },
              "isBundle": {
                "description": "```true``` if the application is part of a product suite; otherwise, ```false```.",
                "type": "boolean"
              },
              "isEndOfExtendedSupport": {
                "description": "```true``` if the application has reached the end of the extended support period; otherwise, ```false```.",
                "type": "boolean",
                "nullable": true
              },
              "isEndOfExtendedSupportDateNotAnnounced": {
                "description": "```true``` if a date for when the extended support period will end has not been announced; otherwise, ```false```.",
                "type": "boolean",
                "nullable": true
              },
              "isEndOfLife": {
                "description": "```true``` if the application has reached its end of life; otherwise, ```false```.",
                "type": "boolean",
                "nullable": true
              },
              "isEndOfLifeDateNotAnnounced": {
                "description": "```true``` if a date for when the application will reach its end of life has not been announced; otherwise, ```false```.",
                "type": "boolean",
                "nullable": true
              },
              "isEndOfSupport": {
                "description": "```true``` if the application has reached the end of the support period; otherwise, ```false```.",
                "type": "boolean",
                "nullable": true
              },
              "isEndOfSupportDateNotAnnounced": {
                "description": "```true``` if a date for when the support period will end has not been announced; otherwise, ```false```.",
                "type": "boolean",
                "nullable": true
              },
              "isGloballyGeneratedApplication": {
                "description": "```true``` if the application is globally generated; otherwise, ```false```.",
                "type": "boolean"
              },
              "isGroup": {
                "description": "```true``` if the application is part of a group of applications; otherwise, ```false```.",
                "type": "boolean"
              },
              "isHidden": {
                "description": "```true``` if the application is hidden; otherwise, ```false```.",
                "type": "boolean"
              },
              "isNoLicenseRequired": {
                "description": "```true``` if the application does not require a license; otherwise, ```false```.",
                "type": "boolean"
              },
              "isOs": {
                "description": "```true``` if the application is an operating system; otherwise, ```false```.",
                "type": "boolean"
              },
              "isReleaseDateNotAnnounced": {
                "description": "```true``` if the release date for the application has not been announced; otherwise, ```false```.",
                "type": "boolean",
                "nullable": true
              },
              "isWebApplication": {
                "description": "```true``` if the application is online; otherwise, ```false```.",
                "type": "boolean",
                "nullable": true
              },
              "manufacturer": {
                "description": "The name of the application manufacturer.",
                "example": "UNETsystem",
                "type": "string"
              },
              "metrics": {
                "type": "array",
                "description": "The metrics of the application.",
                "items": {
                  "$ref": "#/components/schemas/ApplicationMetric"
                }
              },
              "name": {
                "description": "The name of the application.",
                "example": "Anyclick AUS 5",
                "type": "string"
              },
              "platform": {
                "$ref": "#/components/schemas/PlatformType"
              },
              "updatedDate": {
                "description": "The date the application was last updated.",
                "type": "string",
                "format": "date-time",
                "nullable": true
              },
              "versionIndex": {
                "description": "The version index.",
                "example": 1050,
                "type": "integer",
                "format": "int32"
              },
              "overridesApplicationId": {
                "description": "The unique ID of the application that overrides this application.",
                "example": "b0aef8cf-9338-4183-9569-96e81f5ea66e",
                "type": "string",
                "format": "guid",
                "nullable": true
              },
              "releaseDate": {
                "description": "The date the application was released.",
                "type": "string",
                "format": "date-time",
                "nullable": true
              },
              "endOfSupportDate": {
                "description": "The date on which support for the application ends.",
                "type": "string",
                "format": "date-time",
                "nullable": true
              },
              "endOfLifeDate": {
                "description": "The end-of-life date for the application.",
                "type": "string",
                "format": "date-time",
                "nullable": true
              },
              "endOfExtendedSupportDate": {
                "description": "The date on which extended support for the application ends.",
                "type": "string",
                "format": "date-time",
                "nullable": true
              }
            }
          }
        ]
      },
      "FilteredResponseOfApplicationCollection": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "pagination": {
            "description": "The pagination details.",
            "oneOf": [
              {
                "$ref": "#/components/schemas/Pagination"
              }
            ]
          },
          "items": {
            "type": "array",
            
            "items": {
              "$ref": "#/components/schemas/ApplicationCollection"
            }
          }
        }
      },
      "HateoasCollectionOfApplicationCollection": {
        "allOf": [
          {
            "$ref": "#/components/schemas/FilteredResponseOfApplicationCollection"
          },
          {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "_links": {
                "description": "A collection of links to related resources.",
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/Link"
                }
              }
            }
          }
        ]
      },
      "CompatibilityType": {
        "type": "string",
        "description": "The type of compatibility for the application.",
        "x-enumNames": [
          "Downgrade",
          "Upgrade"
        ],
        "enum": [
          "Downgrade",
          "Upgrade"
        ]
      },
      "ApplicationCompatibility": {
        "allOf": [
          {
            "$ref": "#/components/schemas/HateoasResource"
          },
          {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "applicationId": {
                "description": "The unique ID of the application.",
                "example": "b814cda1-2c2a-455c-b288-57b642982eb0",
                "type": "string",
                "format": "guid"
              },
              "compatibleApplicationId": {
                "description": "The unique ID of the compatible application.",
                "example": "ff8cbc59-bfc3-4733-adc3-7f4d80b88f91",
                "type": "string",
                "format": "guid"
              },
              "compatibilityType": {
                "$ref": "#/components/schemas/CompatibilityType"
              },
              "compatibilityOrder": {
                "description": "The order of the compatibility for the application.",
                "example": 2,
                "type": "integer",
                "format": "int32"
              }
            }
          }
        ]
      },
      "FilteredResponseOfApplicationCompatibility": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "pagination": {
            "description": "The pagination details.",
            "oneOf": [
              {
                "$ref": "#/components/schemas/Pagination"
              }
            ]
          },
          "items": {
            "type": "array",
            
            "items": {
              "$ref": "#/components/schemas/ApplicationCompatibility"
            }
          }
        }
      },
      "HateoasCollectionOfApplicationCompatibility": {
        "allOf": [
          {
            "$ref": "#/components/schemas/FilteredResponseOfApplicationCompatibility"
          },
          {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "_links": {
                "description": "A collection of links to related resources.",
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/Link"
                }
              }
            }
          }
        ]
      },
      "Application": {
        "allOf": [
          {
            "$ref": "#/components/schemas/HateoasResource"
          },
          {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "id": {
                "description": "The unique ID of the application.",
                "example": "b814cda1-2c2a-455c-b288-57b642982eb0",
                "type": "string",
                "format": "guid"
              },
              "name": {
                "description": "The name of the application.",
                "example": "Oracle Database 21c",
                "type": "string"
              },
              "description": {
                "description": "The description of the application.",
                "example": "Database by Oracle",
                "type": "string",
                "nullable": true
              },
              "metrics": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/ApplicationMetric"
                }
              },
              "manufacturer": {
                "description": "The manufacturer of the application.",
                "example": "UNETsystem",
                "type": "string"
              },
              "manufacturerWebsite": {
                "description": "The website of the manufacturer of the application.",
                "example": "www.ourcoolapp.com",
                "type": "string",
                "nullable": true
              },
              "language": {
                "description": "The language that the application uses.",
                "example": "English",
                "type": "string"
              },
              "overridesApplicationId": {
                "description": "The unique ID of the application that overrides this application.",
                "example": "b0aef8cf-9338-4183-9569-96e81f5ea66e",
                "type": "string",
                "format": "guid",
                "nullable": true
              },
              "isOs": {
                "description": "```true``` if the application is an operating system; otherwise, ```false```.",
                "type": "boolean"
              },
              "isGroup": {
                "description": "```true``` if the application is part of a group of applications; otherwise, ```false```.",
                "type": "boolean"
              },
              "isBundle": {
                "description": "```true``` if the application is part of a product suite; otherwise, ```false```.",
                "type": "boolean"
              },
              "isHidden": {
                "description": "```true``` if the application is hidden; otherwise, ```false```.",
                "type": "boolean"
              },
              "isNoLicenseRequired": {
                "description": "```true``` if the application does not require a license; otherwise, ```false```.",
                "type": "boolean"
              },
              "isGloballyGeneratedApplication": {
                "description": "```true``` if the application is globally generated; otherwise, ```false```.",
                "type": "boolean"
              },
              "familyId": {
                "description": "The unique ID of the application family.",
                "example": "e5f53402-a698-40d3-b502-5b70b2dda5b2",
                "type": "string",
                "format": "guid",
                "nullable": true
              },
              "editionIndex": {
                "description": "The edition index of the application.",
                "example": 23,
                "type": "integer",
                "format": "int32"
              },
              "versionIndex": {
                "description": "The version index of the application.",
                "example": 4,
                "type": "integer",
                "format": "int32"
              },
              "isWebApplication": {
                "description": "```true``` if the application is online; otherwise, ```false```.",
                "type": "boolean",
                "nullable": true
              },
              "updatedDate": {
                "description": "The date the application data was last updated.",
                "type": "string",
                "format": "date-time",
                "nullable": true
              },
              "releaseDate": {
                "description": "The date the application was released.",
                "type": "string",
                "format": "date-time",
                "nullable": true
              },
              "endOfSupportDate": {
                "description": "The date on which support for the application ends.",
                "type": "string",
                "format": "date-time",
                "nullable": true
              },
              "endOfLifeDate": {
                "description": "The end-of-life date for the application.",
                "type": "string",
                "format": "date-time",
                "nullable": true
              },
              "endOfExtendedSupportDate": {
                "description": "The date on which extended support for the application ends.",
                "type": "string",
                "format": "date-time",
                "nullable": true
              },
              "isEndOfLife": {
                "description": "```true``` if the application has reached its end of life; otherwise, ```false```.",
                "type": "boolean",
                "nullable": true
              },
              "isEndOfSupport": {
                "description": "```true``` if the application has reached the end of the support period; otherwise, ```false```.",
                "type": "boolean",
                "nullable": true
              },
              "isEndOfExtendedSupport": {
                "description": "```true``` if the application has reached the end of the extended support period; otherwise, ```false```.",
                "type": "boolean",
                "nullable": true
              },
              "isReleaseDateNotAnnounced": {
                "description": "```true``` if the release date for the application has not been announced; otherwise, ```false```.",
                "type": "boolean",
                "nullable": true
              },
              "isEndOfSupportDateNotAnnounced": {
                "description": "```true``` if a date for when the support period will end has not been announced; otherwise, ```false```.",
                "type": "boolean",
                "nullable": true
              },
              "isEndOfLifeDateNotAnnounced": {
                "description": "```true``` if a date for when the application will reach its end of life has not been announced; otherwise, ```false```.",
                "type": "boolean",
                "nullable": true
              },
              "isEndOfExtendedSupportDateNotAnnounced": {
                "description": "```true``` if a date for when the extended support period will end has not been announced; otherwise, ```false```.",
                "type": "boolean",
                "nullable": true
              },
              "platform": {
                "$ref": "#/components/schemas/PlatformType"
              }
            }
          }
        ]
      },
      "ApplicationFamily": {
        "allOf": [
          {
            "$ref": "#/components/schemas/HateoasResource"
          },
          {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "id": {
                "description": "The unique ID of the application family.",
                "example": "ba593a8f-1563-432a-8fe4-f0ae3cc60979",
                "type": "string",
                "format": "guid"
              },
              "manufacturer": {
                "description": "The manufacturer of the application family.",
                "example": "Adobe",
                "type": "string"
              },
              "name": {
                "description": "The name of the application family.",
                "example": "Creative Cloud",
                "type": "string"
              },
              "description": {
                "description": "The description of the application family.",
                "example": "Includes Photoshop, Illustrator, Premiere Pro.",
                "type": "string",
                "nullable": true
              }
            }
          }
        ]
      },
      "FilteredResponseOfApplicationFamily": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "pagination": {
            "description": "The pagination details.",
            "oneOf": [
              {
                "$ref": "#/components/schemas/Pagination"
              }
            ]
          },
          "items": {
            "type": "array",
            
            "items": {
              "$ref": "#/components/schemas/ApplicationFamily"
            }
          }
        }
      },
      "HateoasCollectionOfApplicationFamily": {
        "allOf": [
          {
            "$ref": "#/components/schemas/FilteredResponseOfApplicationFamily"
          },
          {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "_links": {
                "description": "A collection of links to related resources.",
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/Link"
                }
              }
            }
          }
        ]
      },
      "ApplicationGroup": {
        "allOf": [
          {
            "$ref": "#/components/schemas/HateoasResource"
          },
          {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "id": {
                "description": "The unique ID of the application group.",
                "example": "a5aa7b50-f304-42b2-b5a1-69d16e13bec1",
                "type": "string",
                "format": "guid"
              },
              "childId": {
                "description": "The unique ID of the child of the application group.",
                "example": "72758ca4-c50e-4b31-bcb7-3a840e0af27f",
                "type": "string",
                "format": "guid"
              },
              "childName": {
                "description": "The name of the child of the application group.",
                "example": "Application group child",
                "type": "string"
              }
            }
          }
        ]
      },
      "FilteredResponseOfApplicationGroup": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "pagination": {
            "description": "The pagination details.",
            "oneOf": [
              {
                "$ref": "#/components/schemas/Pagination"
              }
            ]
          },
          "items": {
            "type": "array",
            
            "items": {
              "$ref": "#/components/schemas/ApplicationGroup"
            }
          }
        }
      },
      "HateoasCollectionOfApplicationGroup": {
        "allOf": [
          {
            "$ref": "#/components/schemas/FilteredResponseOfApplicationGroup"
          },
          {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "_links": {
                "description": "A collection of links to related resources.",
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/Link"
                }
              }
            }
          }
        ]
      },
      "MetricSetting": {
        "type": "string",
        "description": "The setting of the metric.",
        "x-enumNames": [
          "None",
          "UsersWithUsage",
          "PrimaryUsers",
          "UsersWithAccess",
          "DevicesWithUsage",
          "AllDevices"
        ],
        "enum": [
          "None",
          "UsersWithUsage",
          "PrimaryUsers",
          "UsersWithAccess",
          "DevicesWithUsage",
          "AllDevices"
        ]
      },
      "MetricSettingIntervalType": {
        "type": "string",
        "description": "The interval type of the metric setting.",
        "x-enumNames": [
          "Continuous",
          "PeriodIncludingCurrentMonth",
          "PeriodExcludingCurrentMonth",
          "None"
        ],
        "enum": [
          "Continuous",
          "PeriodIncludingCurrentMonth",
          "PeriodExcludingCurrentMonth",
          "None"
        ]
      },
      "Metric": {
        "allOf": [
          {
            "$ref": "#/components/schemas/HateoasResource"
          },
          {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "id": {
                "description": "The unique ID of the metric.",
                "example": "5891a1d8-7fb0-45bd-b1f6-01c943f9c572",
                "type": "string",
                "format": "guid"
              },
              "name": {
                "description": "The name of the metric.",
                "example": "Metric name",
                "type": "string"
              },
              "isDefault": {
                "description": "```true``` if the metric is the default for this application; otherwise, ```false```.",
                "type": "boolean"
              },
              "minimumRequirement": {
                "description": "The minimum requirement for the metric.",
                "example": 56,
                "type": "integer",
                "format": "int32",
                "nullable": true
              },
              "metricSetting": {
                
                "oneOf": [
                  {
                    "$ref": "#/components/schemas/MetricSetting"
                  }
                ]
              },
              "metricSettingIntervalType": {
                
                "oneOf": [
                  {
                    "$ref": "#/components/schemas/MetricSettingIntervalType"
                  }
                ]
              },
              "metricSettingInterval": {
                "description": "The interval setting of the metric.",
                "example": 4,
                "type": "integer",
                "format": "int32",
                "nullable": true
              },
              "customCompareValueType": {
                "description": "The type of the custom compare value of the metric.",
                "example": "Custom compare value type",
                "type": "string"
              },
              "concurrencyInterval": {
                "description": "The concurrency interval of the metric.",
                "example": 6,
                "type": "integer",
                "format": "int32",
                "nullable": true
              },
              "licenseCost": {
                "description": "The license cost of the metric.",
                "example": 299,
                "type": "number",
                "format": "decimal",
                "nullable": true
              },
              "licenseCostCurrency": {
                "description": "The currency of the license cost of the metric.",
                "example": "USD",
                "type": "string"
              },
              "licenseCostBase": {
                "description": "The base of the license cost of the metric.",
                "example": 50.2,
                "type": "number",
                "format": "decimal",
                "nullable": true
              }
            }
          }
        ]
      },
      "FilteredResponseOfMetric": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "pagination": {
            "description": "The pagination details.",
            "oneOf": [
              {
                "$ref": "#/components/schemas/Pagination"
              }
            ]
          },
          "items": {
            "type": "array",
            
            "items": {
              "$ref": "#/components/schemas/Metric"
            }
          }
        }
      },
      "HateoasCollectionOfMetric": {
        "allOf": [
          {
            "$ref": "#/components/schemas/FilteredResponseOfMetric"
          },
          {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "_links": {
                "description": "A collection of links to related resources.",
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/Link"
                }
              }
            }
          }
        ]
      },
      "ApplicationStore": {
        "allOf": [
          {
            "$ref": "#/components/schemas/HateoasResource"
          },
          {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "applicationId": {
                "description": "The unique ID of the store from which the application was purchased or rented.",
                "example": "b4135599-2f9a-4ebc-ad8e-351575eacb70",
                "type": "string",
                "format": "guid"
              },
              "name": {
                "description": "The name of the store from which the application was purchased or rented.",
                "example": "Joe's Computers",
                "type": "string"
              },
              "description": {
                "description": "A description of the store from which the application was purchased or rented.",
                "example": "307 Main Street",
                "type": "string"
              },
              "purchasePriceBase": {
                "description": "The base price to purchase the application from the store.",
                "example": 649.99,
                "type": "number",
                "format": "decimal",
                "nullable": true
              },
              "rentalPriceBase": {
                "description": "The base price to rent the application from the store.",
                "example": 75.00,
                "type": "number",
                "format": "decimal",
                "nullable": true
              },
              "rentalPaymentPeriod": {
                "description": "The payment period to rent the application from the store.",
                "example": 6,
                "type": "integer",
                "format": "int32",
                "nullable": true
              },
              "imageName": {
                "description": "The name of the image for the store.",
                "example": "Store image",
                "type": "string"
              },
              "isOrganizationalApprovalRequired": {
                "description": "```true``` if purchasing the application requires organizational approval; otherwise, ```false```.",
                "type": "boolean"
              },
              "isApplicationOwnerApprovalRequired": {
                "description": "```true``` if purchasing the application requires approval from the application owner; otherwise, ```false```.",
                "type": "boolean"
              },
              "applicationOwnerUsername": {
                "description": "The name of the user who can provide approval to purchase the application from the store.",
                "example": "Ellie",
                "type": "string"
              },
              "isSecondApprovalRequired": {
                "description": "```true``` if purchasing the application from the store requires approval from a second approver; otherwise, ```false```.",
                "type": "boolean"
              },
              "secondApprovalUsername": {
                "description": "The name of the user who can provide second approval to purchase the application from the store.",
                "example": "Bob",
                "type": "string"
              },
              "isThirdApprovalRequired": {
                "description": "```true``` if purchasing the application from the store requires approval from a third approver; otherwise, ```false```.",
                "type": "boolean"
              },
              "thirdApprovalUsername": {
                "description": "The name of the user who can provide third approval to purchase the application from the store.",
                "example": "Parveen",
                "type": "string"
              },
              "provisioningGroupType": {
                "description": "The type of the provisioning group for the application from the store.",
                "example": 72,
                "type": "integer",
                "format": "int32"
              },
              "provisioningGroupOU": {
                "description": "The organizational unit of the provisioning group for the application from the store.",
                "example": "Name of organizational unit",
                "type": "string"
              },
              "computerGroupName": {
                "description": "The name of the computer group from the store.",
                "example": "Sales",
                "type": "string"
              },
              "userGroupName": {
                "description": "The name of the user group from the store.",
                "example": "Technology",
                "type": "string"
              },
              "status": {
                "description": "The status of the store.",
                "example": 3,
                "type": "integer",
                "format": "int32",
                "nullable": true
              },
              "publishLevel": {
                "description": "The publishing level of the store.",
                "example": 5,
                "type": "integer",
                "format": "int32"
              },
              "uninstallOption": {
                "description": "The uninstall option of the store.",
                "example": 1,
                "type": "integer",
                "format": "int32"
              },
              "daysUntilUninstall": {
                "description": "The number of days until the application is uninstalled.",
                "example": 103,
                "type": "integer",
                "format": "int32",
                "nullable": true
              },
              "daysUntilUninstallNotification": {
                "description": "The number of days until the uninstall notification.",
                "example": 96,
                "type": "integer",
                "format": "int32",
                "nullable": true
              },
              "subscriptionExtensionsDays": {
                "description": "The number of days the subscription is extended.",
                "example": 101,
                "type": "integer",
                "format": "int32",
                "nullable": true
              },
              "isUserUninstallApprovalRequired": {
                "description": "```true``` if uninstalling the application from the store requires approval; otherwise, ```false```.",
                "type": "boolean"
              }
            }
          }
        ]
      },
      "ApplicationType": {
        "allOf": [
          {
            "$ref": "#/components/schemas/HateoasResource"
          },
          {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "id": {
                "description": "The unique ID of the application type.",
                "example": "42767697-4849-4c42-bc79-6586e0c3722c",
                "type": "string",
                "format": "guid"
              },
              "name": {
                "description": "The name of the application type.",
                "example": "Access software",
                "type": "string"
              },
              "parentId": {
                "description": "The unique ID of the parent application.",
                "example": "8dbec2e4-c131-4183-b2ee-9b05b53ec210",
                "type": "string",
                "format": "guid",
                "nullable": true
              },
              "updatedDate": {
                "description": "The date on which the application type was updated.",
                "type": "string",
                "format": "date-time"
              }
            }
          }
        ]
      },
      "FilteredResponseOfApplicationType": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "pagination": {
            "description": "The pagination details.",
            "oneOf": [
              {
                "$ref": "#/components/schemas/Pagination"
              }
            ]
          },
          "items": {
            "type": "array",
            
            "items": {
              "$ref": "#/components/schemas/ApplicationType"
            }
          }
        }
      },
      "HateoasCollectionOfApplicationType": {
        "allOf": [
          {
            "$ref": "#/components/schemas/FilteredResponseOfApplicationType"
          },
          {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "_links": {
                "description": "A collection of links to related resources.",
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/Link"
                }
              }
            }
          }
        ]
      },
      "Bundle": {
        "allOf": [
          {
            "$ref": "#/components/schemas/HateoasResource"
          },
          {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "id": {
                "description": "The unique ID of the application.",
                "example": "5be51be2-35ff-48f2-9214-00002248b242",
                "type": "string",
                "format": "guid"
              },
              "childId": {
                "description": "The unique ID of the child application in the bundle or product suite for the application.",
                "example": "59e6cbf6-f8e1-4199-96a9-788f03dc2950",
                "type": "string",
                "format": "guid"
              },
              "isMandatory": {
                "description": "```true``` if the child application is a mandatory part of the bundle or product suite; otherwise, ```false```.",
                "type": "boolean"
              },
              "isOptionalComponentRequired": {
                "description": "```true``` if the child application is a required component of the bundle or product suite; otherwise, ```false```.",
                "type": "boolean"
              }
            }
          }
        ]
      },
      "FilteredResponseOfBundle": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "pagination": {
            "description": "The pagination details.",
            "oneOf": [
              {
                "$ref": "#/components/schemas/Pagination"
              }
            ]
          },
          "items": {
            "type": "array",
            
            "items": {
              "$ref": "#/components/schemas/Bundle"
            }
          }
        }
      },
      "HateoasCollectionOfBundle": {
        "allOf": [
          {
            "$ref": "#/components/schemas/FilteredResponseOfBundle"
          },
          {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "_links": {
                "description": "A collection of links to related resources.",
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/Link"
                }
              }
            }
          }
        ]
      },
      "PlatformType2": {
        "allOf": [
          {
            "$ref": "#/components/schemas/HateoasResource"
          },
          {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "name": {
                "description": "The type of platform on which the application can run.",
                "type": "string",
                "example": "Windows"
              }
            }
          }
        ]
      },
      "FilteredResponseOfPlatformType": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "pagination": {
            "description": "The pagination details.",
            "oneOf": [
              {
                "$ref": "#/components/schemas/Pagination"
              }
            ]
          },
          "items": {
            "type": "array",
            
            "items": {
              "$ref": "#/components/schemas/PlatformType2"
            }
          }
        }
      },
      "HateoasCollectionOfPlatformType": {
        "allOf": [
          {
            "$ref": "#/components/schemas/FilteredResponseOfPlatformType"
          },
          {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "_links": {
                "description": "A collection of links to related resources.",
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/Link"
                }
              }
            }
          }
        ]
      }
    },
    "securitySchemes": {
      "BearerAuth": {
        "type": "http",
        "scheme": "bearer",
        "bearerFormat": "JWT"
      }
    }
  }
}